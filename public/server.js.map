{"version":3,"file":"server.js","mappings":"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","sources":["webpack://spyspy/./client/reducers.js","webpack://spyspy/./server/controllers/gameController.js","webpack://spyspy/./server/controllers/lobbyController.js","webpack://spyspy/./server/controllers/mainController.js","webpack://spyspy/./server/models/game.js","webpack://spyspy/./server/models/room.js","webpack://spyspy/./server/models/round.js","webpack://spyspy/./server/socket.js","webpack://spyspy/external commonjs \"@reduxjs/toolkit\"","webpack://spyspy/external commonjs \"express\"","webpack://spyspy/external commonjs \"randomstring\"","webpack://spyspy/external commonjs \"socket.io\"","webpack://spyspy/external commonjs \"socket.io-client\"","webpack://spyspy/external node-commonjs \"http\"","webpack://spyspy/external node-commonjs \"path\"","webpack://spyspy/webpack/bootstrap","webpack://spyspy/webpack/runtime/compat get default export","webpack://spyspy/webpack/runtime/define property getters","webpack://spyspy/webpack/runtime/hasOwnProperty shorthand","webpack://spyspy/webpack/runtime/make namespace object","webpack://spyspy/./server/server.js"],"sourcesContent":["import { configureStore, createSlice, combineReducers, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialGameState = {\r\n    players: [],\r\n    spies: [],\r\n    knights: [],\r\n    rounds: [],\r\n    leader: '',\r\n    showRoles: false,\r\n    allAcknowledged: false,\r\n    selectedPlayers: [],\r\n    currentRound: 0,\r\n    castToVote: false,\r\n    allowToVote: true,\r\n    showWinner: false,\r\n    knightsWon: false,\r\n    gameOver: false,\r\n    knightsWonGame: null,\r\n}\r\n\r\nconst initialRoomState = {\r\n    selfId: '',\r\n    selfAlias: '',\r\n    players: [],\r\n    roomCode: null,\r\n    error: null,\r\n    gameStarted:false,\r\n}\r\n\r\nconst roomsSlice = createSlice({\r\n    name: \"room\",\r\n    initialState:initialRoomState,\r\n    reducers: {\r\n        ioCreateRoom(state,action){\r\n        },\r\n        roomCreated(state,{action,payload}){\r\n            return {...state,...payload}; \r\n        },\r\n        ioEnterRoomCode(state,{action,payload}){            \r\n        },\r\n        updatePlayers(state,{action,payload}){\r\n            return {...state, players: payload}\r\n        },\r\n        updateSelf(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        errorOccured(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        },\r\n        ioPlayerIsReady(state,{action,payload}){\r\n        },\r\n        ioStartGame(state){\r\n\r\n        },\r\n        navigateToGame(state){\r\n            return {\r\n                ...state,\r\n                gameStarted: true\r\n            }\r\n        },\r\n        returnAllRoomData(state,{action,payload}){\r\n            return {...state,...payload}\r\n        },\r\n    }\r\n});\r\n\r\nconst gameSlice = createSlice({\r\n    name:\"game\",\r\n    initialState:initialGameState,\r\n    reducers: {\r\n        updateGameState(state,{action,payload}){\r\n            return{\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        ioGetAllData(state){\r\n        },\r\n        ioPlayerAcknowledged(state){},\r\n        allPlayersAcknowledged(state,{action,payload}){\r\n            return {...state,allAcknowledged:true,showRoles:false}\r\n        },\r\n        ioUpdateSelectedPlayers(state,{action,payload}){\r\n        },\r\n        updateSelectedPlayers(state,{action,payload}){\r\n            return {...state,selectedPlayers:payload}\r\n        },\r\n        ioCastToVote(state,{action,payload}){},\r\n        updateCastToVote(state,{action,payload}){\r\n            return {...state,castToVote:payload}\r\n        },\r\n        ioPlayerCastVote(state,{action,payload}){},\r\n        updateAllowToVote(state,{action,payload}){\r\n            return {...state,allowToVote:payload}\r\n        },\r\n        showWinner(state,{action,payload}){\r\n            return {...state,showWinner:true,knightsWon:payload}\r\n        },\r\n        hideShowWinner(state,{action,payload}){\r\n            return {...state,showWinner:false}\r\n        },\r\n        resetGameState(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                leader:payload.newLeader,\r\n                selectedPlayers: [],\r\n                currentRound:payload.currentRound,\r\n                castToVote: false,\r\n                allowToVote: true,\r\n                showWinner: false,\r\n                knightsWon: false,\r\n                rounds: payload.rounds,\r\n                gameOver: false,\r\n                knightsWonGame: null\r\n            }\r\n        },\r\n        ioVetoMissionHandler(state,{action,payload}){},\r\n        updateMissionVetoed(state,{action,payload}){\r\n            state.rounds[state.currentRound].missionWasVetoed = payload;\r\n        },\r\n        gameOver(state,{action,payload}){\r\n            return {...state,gameOver:true,knightsWonGame:payload.knightsWonGame}\r\n        },\r\n    }\r\n}\r\n);\r\n\r\n//Root reducer for usage in the store\r\nexport const rootReducer = combineReducers({\r\n    room: roomsSlice.reducer,\r\n    game: gameSlice.reducer,\r\n});\r\n\r\n//Make action creators accesible \r\n\r\nexport const {\r\n    ioCreateRoom,\r\n    roomCreated,\r\n    navigateToLobby,\r\n    ioEnterRoomCode,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    navigateToGame,\r\n    returnAllRoomData\r\n} = roomsSlice.actions;\r\n\r\nexport const {\r\n    updateGameState,\r\n    ioGetAllData,\r\n    ioPlayerAcknowledged,\r\n    allPlayersAcknowledged,\r\n    ioUpdateSelectedPlayers,\r\n    updateSelectedPlayers,\r\n    ioCastToVote,\r\n    updateCastToVote,\r\n    ioPlayerCastVote,\r\n    updateAllowToVote,\r\n    showWinner,\r\n    hideShowWinner,\r\n    resetGameState,\r\n    ioVetoMissionHandler,\r\n    updateMissionVetoed,\r\n    gameOver\r\n} = gameSlice.actions;\r\n\r\n","import {Game} from '../models/game';\r\nimport Round from '../models/round';\r\n\r\nimport {\r\n    navigateToGame,\r\n} from '../../client/reducers';\r\nimport {\r\n    updateGameState,\r\n    allPlayersAcknowledged,\r\n    updateSelectedPlayers,\r\n    updateCastToVote,\r\n    updateAllowToVote,\r\n    updateMissionVetoed,\r\n    showWinner,\r\n    hideShowWinner,\r\n    resetGameState,\r\n    gameOver\r\n} from '../../client/reducers';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport default class GameController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.games = new Map();\r\n    }\r\n\r\n    createGame = function(room){\r\n        const game = new Game(room);\r\n        this.games.set(room.roomCode,game)\r\n        return game;\r\n    } \r\n\r\n    checkAllPlayersAcknowledged = function(roomCode){\r\n        let game = this.games.get(roomCode);\r\n        game.playersAcknowledgedRole++;\r\n        if(game.playersAcknowledgedRole === game.players.length){\r\n            this.io.in(roomCode).emit(allPlayersAcknowledged.type)\r\n        }\r\n        return game;\r\n    }\r\n\r\n    sendSelectedPlayersToRoom = function(roomCode, selectedPlayers){\r\n        this.io.in(roomCode).emit(updateSelectedPlayers.type,selectedPlayers);\r\n    }\r\n\r\n    updateCastToVote = function(roomCode, castToVote){\r\n        this.castToVote = castToVote;\r\n        this.io.in(roomCode).emit(updateCastToVote.type,castToVote);\r\n    }\r\n\r\n    getGameFromRoomcode = function(roomCode){\r\n        return this.games.get(roomCode);\r\n    }\r\n\r\n    setGameWithRoomcode = function(roomCode,game){\r\n        this.games.set(roomCode,game)\r\n    }\r\n\r\n    //updates a players choice whether to veto or pass the mission from MissionVoter component. \r\n    updateVetoDecision = function(roomCode, playerId, veto){\r\n        let game = this.getGameFromRoomcode(roomCode)\r\n        if(veto===true){\r\n            game.rounds[game.currentRound].vetoed.push(playerId)\r\n        } else if(veto===false) {\r\n            game.rounds[game.currentRound].accepted.push(playerId)\r\n        }\r\n        this.setGameWithRoomcode(roomCode,game);\r\n    }\r\n\r\n    //checks for majority veto or majority pass\r\n    //return {allPlayersVoted: boolean, vetoMission: boolean} \r\n    checkVetoStatus = function(roomCode){\r\n        let returnObject = {\r\n            allPlayersVoted: false,\r\n            vetoMission: false\r\n        };\r\n        const game = this.getGameFromRoomcode(roomCode);\r\n        const currentRound = game.rounds[game.currentRound];\r\n        if((currentRound.vetoed.length + currentRound.accepted.length)===game.players.length){\r\n            returnObject.allPlayersVoted = true; \r\n        };\r\n        if(currentRound.vetoed.length > currentRound.accepted.length){\r\n            returnObject.vetoMission = true;\r\n        } else {\r\n            returnObject.vetoMission = false;\r\n        };\r\n        return returnObject;\r\n    }\r\n\r\n    //emits actions to inform the client that the mission whould go ahead or not \r\n    updateMissionVetoed = function(roomCode,vetoed){\r\n        if(vetoed){\r\n            let game = this.getGameFromRoomcode(roomCode);\r\n            game.numberOfVetos++;\r\n            this.io.in(roomCode).emit(updateMissionVetoed.type,true);\r\n            this.transitionRound(roomCode);\r\n            let [gameOver,knightsWonGame] = this.checkGameOver(game);\r\n            if(gameOver){\r\n                this.io.in(roomCode).emit(gameOver.type,knightsWonGame);\r\n            }\r\n        } else {\r\n            let game = this.getGameFromRoomcode(roomCode);\r\n            game.numberOfVetos = 0; //if players did not veto then the veto count gets reset \r\n            this.setGameWithRoomcode(roomCode,game);\r\n            this.io.in(roomCode).emit(updateMissionVetoed.type,false);\r\n        }\r\n    }\r\n\r\n    updatePlayerVote = function(gameToUpdate,selfId,missionPass){\r\n        let game = gameToUpdate;\r\n        missionPass ? game.rounds[game.currentRound].numberOfPass++ : game.rounds[game.currentRound].numberOfFail++;\r\n        let playerName = this.getNameFromId(game,selfId);\r\n        game.rounds[game.currentRound].playersOnMission.push(playerName);\r\n        return game;\r\n    }\r\n\r\n    checkAllPlayersVoted = function(roomCode){\r\n        const game = this.getGameFromRoomcode(roomCode)\r\n        const currentRound = game.rounds[game.currentRound]\r\n        if((currentRound.numberOfFail + currentRound.numberOfPass) === game.missionRules[game.players.length-5][game.currentRound]){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    checkIfKnightsWin = function(roomCode){\r\n        let game = this.games.get(roomCode)\r\n        let currentRound = game.rounds[game.currentRound]\r\n\r\n        //if mission was vetoed then nobody wins\r\n        if(currentRound.numberOfFail===0 && currentRound.numberOfPass===0){\r\n            return null;\r\n        }\r\n        //if mission fails then spies won\r\n        if(currentRound.numberOfFail>=1 && game.players.length<7){\r\n            game.rounds[game.currentRound].knightsWon = false;\r\n            this.games.set(roomCode,game)\r\n            return false;\r\n        } else if (currentRound.numberOfFail>=2 && game.players.length >= 7 ){\r\n            game.rounds[game.currentRound].knightsWon = false;\r\n            this.games.set(roomCode,game)\r\n            return false;\r\n        } else {\r\n            game.rounds[game.currentRound].knightsWon = true;\r\n            this.games.set(roomCode,game)\r\n            return true;\r\n        }\r\n    }\r\n\r\n    transitionRound = function(roomCode){\r\n        let game = this.getGameFromRoomcode(roomCode);\r\n        let knightsWon = this.checkIfKnightsWin(roomCode);\r\n        if(knightsWon!==null){\r\n            this.storeWinner(knightsWon,this.getGameFromRoomcode(roomCode))\r\n            this.incrementRound(game);\r\n        } else{\r\n            this.resetRound(game);\r\n        } \r\n        this.incrementLeader(game);\r\n        //send something back to the front-end to show the winner \r\n        console.log(game.gameOver)\r\n        if(!game.gameOver){\r\n            this.io.in(roomCode).emit(showWinner.type,knightsWon);\r\n            setTimeout(()=>{\r\n                //wait and then\r\n                // hide the winners \r\n                this.io.in(roomCode).emit(hideShowWinner.type);\r\n                this.io.in(roomCode).emit(resetGameState.type,{rounds:game.rounds,currentRound:game.currentRound,newLeader:game.leader});\r\n            },5000)\r\n        }    \r\n            // increment the round and reset what needs to be reset\r\n    }\r\n\r\n    //After a veto, resets the state for the current round \r\n    resetRound = function(game){\r\n        let updatedGame = game\r\n        updatedGame.rounds[game.currentRound] = new Round(); \r\n        this.setGameWithRoomcode(updatedGame.roomCode,updatedGame);\r\n    }\r\n\r\n    //need to add a new blank round\r\n    //set game.currentRound++\r\n    //game.selectedPlayers back to []\r\n    //game.leader = ''\r\n    //\r\n\r\n    storeWinner = function(knightsWin,game){\r\n        let updatedGame = game; \r\n        updatedGame.rounds[game.currentRound].knightsWon = knightsWin;\r\n        this.setGameWithRoomcode(updatedGame.roomCode, updatedGame);\r\n    }\r\n\r\n    incrementRound = function(game){\r\n        let updatedGame = game; \r\n        updatedGame.currentRound++;\r\n        this.setGameWithRoomcode(updatedGame.roomCode,updatedGame);\r\n    }\r\n\r\n    incrementLeader = function(game){\r\n        let updatedGame = game; \r\n        updatedGame.leader = updatedGame.incrementMissionLeader(updatedGame.players,updatedGame.leader);\r\n        this.setGameWithRoomcode(updatedGame.roomCode,updatedGame);\r\n    }\r\n\r\n    //works under the assumption that player names will not be the same\r\n    getNameFromId = (game,providedSelfId) => {\r\n        let playerName = game.players.filter((player)=>{\r\n            return player.playerId===providedSelfId\r\n        })\r\n        if(playerName[0]){\r\n            return playerName[0].selfAlias;\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n    checkGameOver(game){\r\n\r\n        let rounds = game.rounds\r\n        let timesKnightsWon = 0;\r\n        let timesSpiesWon = 0;\r\n        let gameOver = false;\r\n        let knightsWonGame = null;\r\n\r\n        if(game.numberOfVetos===game.players.length){\r\n            gameOver = true;\r\n            knightsWonGame = null;\r\n            return [gameOver,knightsWonGame]\r\n        }\r\n\r\n        rounds.forEach((round)=>{\r\n            if(round.knightsWon === true){\r\n                timesKnightsWon++;\r\n            } else if (round.knightsWon === false){\r\n                timesSpiesWon++;\r\n            }\r\n        })\r\n\r\n        if(timesKnightsWon===3){\r\n            gameOver = true;\r\n            knightsWonGame = true;\r\n            return [gameOver,knightsWonGame]\r\n        } else if (timesSpiesWon===3){\r\n            gameOver = true;\r\n            knightsWonGame = false;\r\n            return [gameOver,knightsWonGame]\r\n        } else {\r\n            return [false,null]\r\n        }\r\n    }\r\n}\r\n\r\nexport const communicateStartOfGame = (io, toRoom, game) => {\r\n    io.in(toRoom).emit(navigateToGame.type);\r\n    io.in(toRoom).emit(updateGameState.type,game);\r\n}\r\n\r\nexport const communicatePlayerCantVote = (io,selfId) => {\r\n    io.to(selfId).emit(updateAllowToVote.type,false)\r\n}\r\n\r\n\r\n","import {\r\n    roomCreated,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    returnAllRoomData\r\n} from '../../client/reducers';\r\n\r\nimport { Room } from '../models/room';\r\n\r\n// one instance is made on server start up\r\nexport default class LobbyController{\r\n\r\n    constructor(io){\r\n        this.io=io;\r\n        this.rooms = new Map();\r\n        this.playersToRooms = new Map();\r\n    }\r\n\r\n    createRoom = function(playerId){\r\n        const newRoom = new Room(playerId);\r\n        this.addToRoomMap(newRoom);\r\n        this.addPlayerToRoomMap(newRoom,playerId);\r\n        this.io.to(playerId).emit(roomCreated.type,this.formattedRoom(newRoom,playerId));\r\n        return newRoom.roomCode\r\n    }\r\n\r\n    joinRoom = function(enteredRoomCode,socket){\r\n        if(this.checkRoomExists(enteredRoomCode)){\r\n            if(!this.roomIsFull(enteredRoomCode)){\r\n                socket.join(enteredRoomCode);\r\n                const room = this.rooms.get(enteredRoomCode)\r\n                this.addPlayerToRoomMap(room,socket.id)\r\n                const players = this.addPlayerToRoom(enteredRoomCode,socket.id)\r\n                //update this players state \r\n                this.io.to(socket.id).emit(updateSelf.type,this.formattedPlayer(enteredRoomCode,players,socket.id));\r\n                //update all players state with the list of players\r\n                this.io.in(enteredRoomCode).emit(updatePlayers.type,players);\r\n            } else {\r\n                this.io.to(socket.id).emit(errorOccured.type,'roomIsFull');\r\n            }\r\n        } else{\r\n            \r\n        }          \r\n    }\r\n\r\n    playerLeft = function(playerId){\r\n        try{\r\n            this.removePlayerFromRoom(playerId)\r\n        } catch(error){\r\n            console.log(chalk.red('an error occured trying to remove a player from their room'));\r\n            console.log(error);\r\n        }  \r\n    }\r\n\r\n    addToRoomMap = function(newRoom){\r\n        return this.rooms.set(newRoom.roomCode,newRoom);\r\n    }\r\n\r\n    addPlayerToRoomMap = function(newRoom,playerId){\r\n        return this.playersToRooms.set(playerId,newRoom.roomCode);\r\n    }\r\n\r\n    formattedRoom = function(newRoom,playerId){\r\n        return {\r\n            roomCode: newRoom.roomCode,\r\n            selfId: playerId,\r\n            selfAlias: newRoom.players[0].selfAlias,\r\n            players: newRoom.players\r\n        }\r\n    }\r\n\r\n    formattedPlayer = function(roomCode, playersArray,playerId){\r\n\r\n        const selfAlias = playersArray.filter((player)=>{\r\n            return player.selfId === playerId\r\n        }).selfAlias\r\n\r\n        return {\r\n            roomCode: roomCode, \r\n            selfId: playerId,\r\n            selfAlias\r\n        }\r\n    }\r\n\r\n    checkRoomExists(enteredCode){\r\n        return this.rooms.has(enteredCode)\r\n    }\r\n\r\n    addPlayerToRoom(enteredRoomCode, player){\r\n        let room = this.rooms.get(enteredRoomCode);\r\n        if(room){\r\n            if(room.players.length<10){\r\n                room.addPlayer(player);\r\n            }\r\n            return room.players;\r\n        } else {\r\n            console.log(chalk.red(`no room was found for ${enteredCode}`))\r\n        }\r\n    }\r\n\r\n    removePlayerFromRoom(playerId){\r\n        if(this.playersToRooms.size===0 || this.playersToRooms.get(playerId) === undefined){\r\n            return;\r\n        }\r\n        let roomName = this.playersToRooms.get(playerId);\r\n        let playerRoom = this.rooms.get(roomName);\r\n        if(playerRoom){\r\n            \r\n            let remainingPlayers = (playerRoom.players).filter((player)=>{\r\n                return player.playerId !== playerId\r\n            });\r\n    \r\n            playerRoom = {\r\n                ...playerRoom, \r\n                players:remainingPlayers\r\n            }\r\n    \r\n            if(playerRoom.players.length===0){\r\n                this.rooms.delete(roomName);    \r\n            } else {\r\n                this.rooms.set(roomName,playerRoom);\r\n                this.io.in(roomName).emit(updatePlayers.type,remainingPlayers);\r\n            } \r\n        }\r\n    }\r\n\r\n    roomIsFull = function(roomCode) {\r\n        let room = this.rooms.get(roomCode);\r\n        return room.players.length < 10 ? false : true; \r\n    }\r\n\r\n    //returns an updated player array where the callingPlayer's isReady property is flipped\r\n    updatePlayerReadiness = function(callingPlayerId){\r\n        const room = this.rooms.get(this.playersToRooms.get(callingPlayerId))\r\n        const updatedPlayerArray = (room.players||[]).map((player)=>{\r\n            if(player.playerId === callingPlayerId){\r\n                return {...player,readyToStart:!player.readyToStart}\r\n            } else {\r\n                return player;\r\n            }\r\n        })\r\n        return updatedPlayerArray\r\n    }\r\n\r\n    sendUpdatedPlayersToRoom = function(updatedPlayers,enteredRoomCode){\r\n        this.io.in(enteredRoomCode).emit(updatePlayers.type,updatedPlayers);\r\n    }\r\n\r\n    getRoom = function(enteredRoomCode){\r\n        return this.rooms.get(enteredRoomCode);\r\n    }\r\n\r\n    emitAllRoomData = function(enteredRoomCode, socketId){\r\n        //Problem here is that the socket id changes between refreshes\r\n        //Would have to implement a way to cache the player session\r\n    }\r\n\r\n}\r\n\r\n\r\n","import LobbyController from \"./lobbyController\";\r\nimport GameController, {communicateStartOfGame,communicatePlayerCantVote} from \"./gameController\";\r\n\r\nimport {\r\n    ioCreateRoom,\r\n    ioEnterRoomCode,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    errorOccured,\r\n    ioPlayerAcknowledged,\r\n    ioUpdateSelectedPlayers,\r\n    ioGetAllData,\r\n    ioCastToVote,\r\n    ioPlayerCastVote,\r\n    ioVetoMissionHandler,\r\n    gameOver\r\n} from '../../client/reducers';\r\n\r\n//Handles socket \r\nexport default class MainController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.lobbyController = new LobbyController(this.io);\r\n        this.gameController = new GameController(this.io);\r\n\r\n        this.io.on(\"connection\", (socket) => {\r\n\r\n            socket.on(ioCreateRoom.type,()=>{\r\n                socket.join(this.lobbyController.createRoom(socket.id));\r\n            });\r\n    \r\n            socket.on(ioEnterRoomCode.type,(enteredRoomCode)=>{\r\n                 this.lobbyController.joinRoom(enteredRoomCode,socket);\r\n            });\r\n\r\n            socket.on(\"disconnect\",()=>{\r\n               this.lobbyController.playerLeft(socket.id)\r\n            })\r\n\r\n            socket.on(ioPlayerIsReady.type,(payload)=>{\r\n                const updatedPlayers = this.lobbyController.updatePlayerReadiness(payload.playerId);\r\n                this.lobbyController.rooms.get(payload.roomCode).updatePlayers(updatedPlayers);\r\n                this.lobbyController.sendUpdatedPlayersToRoom(updatedPlayers,payload.roomCode);\r\n            });\r\n\r\n            socket.on(ioStartGame.type,(enteredRoomCode)=>{\r\n                const room = this.lobbyController.getRoom(enteredRoomCode)\r\n                if(room){\r\n                    let game = this.gameController.createGame(room);\r\n                    communicateStartOfGame(io,room.roomCode,game);\r\n                } else {\r\n                    console.log('Tried to create a gameController without valid room object passed. Passed to function:')\r\n                    console.log(room)\r\n                }\r\n            })\r\n\r\n            socket.on(ioGetAllData.type,(enteredRoomCode)=>{\r\n                if(this.lobbyController.checkRoomExists(enteredRoomCode)){\r\n                    this.lobbyController.emitAllRoomData(enteredRoomCode,socket.id)\r\n                } else {\r\n                    io.to(socket.id).emit(errorOccured.type,'No Such Room Exists...');\r\n                }\r\n            })\r\n\r\n            socket.on(ioPlayerAcknowledged.type,(enteredRoomCode)=>{\r\n                this.gameController.setGameWithRoomcode(this.gameController.checkAllPlayersAcknowledged(enteredRoomCode));\r\n            })\r\n\r\n            socket.on(ioUpdateSelectedPlayers.type,(payload)=>{\r\n                this.gameController.sendSelectedPlayersToRoom(payload.roomCode,payload.newSelectedPlayers)\r\n            })\r\n\r\n            socket.on(ioCastToVote.type,(payload)=>{\r\n                this.gameController.updateCastToVote(payload.roomCode,payload.castToVote)\r\n            })\r\n\r\n            socket.on(ioPlayerCastVote.type,(payload)=>{\r\n\r\n                let game = this.gameController.getGameFromRoomcode(payload.roomCode);\r\n                this.gameController.setGameWithRoomcode(payload.roomCode,this.gameController.updatePlayerVote(game,payload.selfId,payload.missionPass));\r\n                communicatePlayerCantVote(io,payload.selfId);\r\n                let allPlayersVoted = this.gameController.checkAllPlayersVoted(payload.roomCode);\r\n                if(allPlayersVoted){\r\n                    this.gameController.transitionRound(payload.roomCode);\r\n                    let [gameOverFlag,knightsWonGame] = this.gameController.checkGameOver(game);\r\n                    if(!gameOverFlag){\r\n                    } else {\r\n                        game.gameOver=true; \r\n                        this.gameController.setGameWithRoomcode(payload.roomCode,game);\r\n                        this.io.in(payload.roomCode).emit(gameOver.type,knightsWonGame);\r\n                    }\r\n                }\r\n            })\r\n\r\n            socket.on(ioVetoMissionHandler.type,(payload)=>{\r\n                this.gameController.updateVetoDecision(payload.roomCode,payload.playerId,payload.vetoMission);\r\n                const vetoStatus = this.gameController.checkVetoStatus(payload.roomCode);\r\n                if(vetoStatus.allPlayersVoted){\r\n                    this.gameController.updateMissionVetoed(payload.roomCode,vetoStatus.vetoMission);\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import Round from '../models/round';\r\nimport { Room } from './room';\r\n\r\nexport class Game {\r\n    constructor(room){\r\n        this.roomCode = room.roomCode;\r\n        this.players = [...room.players];\r\n        this.numberOfPlayers = this.players.length;\r\n        let selectedRoles = this.selectRoles(this.players)\r\n        this.spies = selectedRoles.spies;\r\n        this.knights = selectedRoles.knights;\r\n        this.rounds = [\r\n            new Round(),\r\n            new Round(),\r\n            new Round(),\r\n            new Round(),\r\n            new Round(),\r\n        ];\r\n        this.leader = this.selectMissionLeader(this.players);\r\n        this.showRoles = true;\r\n        this.playersAcknowledgedRole = 0;\r\n        this.castToVote = false;\r\n        this.currentRound = 0;\r\n        this.missionRules = [\r\n            [2,3,2,3,3], //5 players\r\n            [2,3,4,3,4], //6 players\r\n            [2,3,3,4,4], //7 players\r\n            [3,4,4,5,5], //8 players\r\n            [3,4,4,5,5], //9 players\r\n            [3,4,4,5,5] //10 players\r\n        ],\r\n        this.numberOfVetos = 0; \r\n        this.knightsWonGame = null; \r\n        this.gameOver = false;\r\n    }\r\n\r\n    //selects 1/3 (rounded up) of players to be spies \r\n    selectRoles = function(players){\r\n        let playersArray = [...players];\r\n        let spies = []\r\n        let knights = []\r\n        //assign the spies\r\n        while(spies.length<Math.ceil((players.length*0.33))){\r\n            let randomIndex = Math.ceil((Math.random()*playersArray.length))-1;\r\n            spies.push(playersArray[randomIndex])\r\n            playersArray.splice(randomIndex,1)\r\n        }\r\n        knights = playersArray; //assign the remaining knights\r\n\r\n        return {spies, knights};\r\n    }\r\n\r\n    selectMissionLeader = function(players){\r\n        let randomIndex = Math.ceil((Math.random()*players.length))-1;\r\n        return players[randomIndex].playerId;\r\n    }\r\n\r\n    // incrementMissionLeader = function(players,previousMissionLeader)\r\n    // if previous leader is number 4, should return 5\r\n    // if previous leader is 5 should return 1\r\n\r\n    incrementMissionLeader = function(players,previousMissionLeader){\r\n        let previousLeaderIndex = players.findIndex(player => player.playerId===previousMissionLeader);\r\n        let leaderIsLast = previousLeaderIndex === players.length-1;\r\n        if(leaderIsLast){\r\n            return players[0].playerId;\r\n        } else {\r\n            return players[previousLeaderIndex+1].playerId;\r\n        }\r\n    }\r\n}","import randomstring from \"randomstring\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport class Room {\r\n\r\n    //callingPlayerId: socket.id\r\n    constructor(callingPlayerId){\r\n        this.roomCode = this.generateRoomCode();\r\n        this.players = [];\r\n        this.addPlayer(callingPlayerId)\r\n    }\r\n\r\n    generateRoomCode = function(){\r\n        return randomstring.generate({\r\n            length: 6,\r\n            charset: 'alphanumeric'\r\n        });\r\n    }\r\n\r\n    addPlayer = function(callingPlayerId){\r\n        this.players.push({\r\n            playerId:callingPlayerId,\r\n            selfAlias:`Player${this.players.length+1}`,\r\n            readyToStart: false\r\n        });\r\n    }\r\n\r\n    updatePlayers = function(newPlayerArray){\r\n        this.players = newPlayerArray;\r\n    }\r\n\r\n}","export default class Round {\r\n    constructor(){\r\n        this.playersOnMission= [];\r\n        this.numberOfPass = 0;\r\n        this.numberOfFail = 0;\r\n        this.knightsWon = undefined;\r\n        this.accepted = [];\r\n        this.vetoed = []; \r\n        this.missionWasVetoed = null; \r\n    }\r\n}","import { Server } from 'socket.io';\r\nimport path from 'path';\r\n\r\nexport default (httpServer) => {\r\n\r\n    console.log('Setting up socket.io server...');\r\n    const io = new Server(httpServer,{\r\n        cors: {\r\n            origin: \"*\"\r\n        },\r\n    });\r\n\r\n    return io;\r\n}","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"express\");","module.exports = require(\"randomstring\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\r\nimport socketServer from \"./socket\";\r\nimport {createServer} from 'http';\r\nimport path from 'path';\r\nconst publicPath = path.join(__dirname, '..', 'public','dist');\r\nimport MainController from './controllers/mainController';\r\n\r\nconst expressServer = express();\r\nexpressServer.use(express.static(publicPath));\r\nexpressServer.get('*', (req, res)=>{\r\n    res.sendFile(path.join(publicPath,'index.html'));\r\n})\r\n\r\nconst httpServer = createServer(expressServer);\r\n\r\nconst io = socketServer(httpServer);\r\n\r\nconst port = process.env.PORT || 3000\r\nhttpServer.listen(port, ()=> {\r\n    console.log(`Server running on port ${port}`);\r\n});\r\n\r\nconst mainController = new MainController(io);\r\n\r\n\r\n"],"names":["configureStore","createSlice","combineReducers","PayloadAction","initialGameState","players","spies","knights","rounds","leader","showRoles","allAcknowledged","selectedPlayers","currentRound","castToVote","allowToVote","showWinner","knightsWon","gameOver","knightsWonGame","initialRoomState","selfId","selfAlias","roomCode","error","gameStarted","roomsSlice","name","initialState","reducers","ioCreateRoom","state","action","roomCreated","payload","ioEnterRoomCode","updatePlayers","updateSelf","errorOccured","ioPlayerIsReady","ioStartGame","navigateToGame","returnAllRoomData","gameSlice","updateGameState","ioGetAllData","ioPlayerAcknowledged","allPlayersAcknowledged","ioUpdateSelectedPlayers","updateSelectedPlayers","ioCastToVote","updateCastToVote","ioPlayerCastVote","updateAllowToVote","hideShowWinner","resetGameState","newLeader","ioVetoMissionHandler","updateMissionVetoed","missionWasVetoed","rootReducer","room","reducer","game","actions","navigateToLobby","Game","Round","io","GameController","games","set","get","playersAcknowledgedRole","length","emit","type","playerId","veto","getGameFromRoomcode","vetoed","push","accepted","setGameWithRoomcode","returnObject","allPlayersVoted","vetoMission","numberOfVetos","transitionRound","checkGameOver","gameToUpdate","missionPass","numberOfPass","numberOfFail","playerName","getNameFromId","playersOnMission","missionRules","checkIfKnightsWin","storeWinner","incrementRound","resetRound","incrementLeader","console","log","setTimeout","updatedGame","knightsWin","incrementMissionLeader","providedSelfId","filter","player","Map","timesKnightsWon","timesSpiesWon","forEach","round","communicateStartOfGame","toRoom","communicatePlayerCantVote","to","Room","LobbyController","newRoom","addToRoomMap","addPlayerToRoomMap","formattedRoom","enteredRoomCode","socket","checkRoomExists","roomIsFull","join","rooms","id","addPlayerToRoom","formattedPlayer","removePlayerFromRoom","chalk","red","playersToRooms","playersArray","callingPlayerId","updatedPlayerArray","map","readyToStart","updatedPlayers","socketId","enteredCode","has","addPlayer","size","undefined","roomName","playerRoom","remainingPlayers","MainController","lobbyController","gameController","on","createRoom","joinRoom","playerLeft","updatePlayerReadiness","sendUpdatedPlayersToRoom","getRoom","createGame","emitAllRoomData","checkAllPlayersAcknowledged","sendSelectedPlayersToRoom","newSelectedPlayers","updatePlayerVote","checkAllPlayersVoted","gameOverFlag","updateVetoDecision","vetoStatus","checkVetoStatus","Math","ceil","randomIndex","random","splice","previousMissionLeader","previousLeaderIndex","findIndex","leaderIsLast","numberOfPlayers","selectedRoles","selectRoles","selectMissionLeader","randomstring","generate","charset","newPlayerArray","generateRoomCode","Server","path","httpServer","cors","origin","express","socketServer","createServer","publicPath","__dirname","expressServer","use","req","res","sendFile","port","process","env","PORT","listen","mainController"],"sourceRoot":""}