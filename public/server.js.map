{"version":3,"file":"server.js","mappings":"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","sources":["webpack://spyspy/./client/reducers.js","webpack://spyspy/./server/controllers/gameController.js","webpack://spyspy/./server/controllers/lobbyController.js","webpack://spyspy/./server/controllers/mainController.js","webpack://spyspy/./server/models/game.js","webpack://spyspy/./server/models/room.js","webpack://spyspy/./server/models/round.js","webpack://spyspy/./server/socket.js","webpack://spyspy/external commonjs \"@reduxjs/toolkit\"","webpack://spyspy/external commonjs \"express\"","webpack://spyspy/external commonjs \"randomstring\"","webpack://spyspy/external commonjs \"socket.io\"","webpack://spyspy/external commonjs \"socket.io-client\"","webpack://spyspy/external node-commonjs \"http\"","webpack://spyspy/external node-commonjs \"path\"","webpack://spyspy/webpack/bootstrap","webpack://spyspy/webpack/runtime/compat get default export","webpack://spyspy/webpack/runtime/define property getters","webpack://spyspy/webpack/runtime/hasOwnProperty shorthand","webpack://spyspy/webpack/runtime/make namespace object","webpack://spyspy/./server/server.js"],"sourcesContent":["import { configureStore, createSlice, combineReducers, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialGameState = {\r\n    players: [],\r\n    spies: [],\r\n    knights: [],\r\n    rounds: [],\r\n    leader: '',\r\n    showRoles: false,\r\n    allAcknowledged: false,\r\n    selectedPlayers: [],\r\n    currentRound: 0,\r\n    castToVote: false,\r\n    allowToVote: true,\r\n    showWinner: false,\r\n    knightsWon: false,\r\n}\r\n\r\nconst initialRoomState = {\r\n    selfId: '',\r\n    selfAlias: '',\r\n    players: [],\r\n    roomCode: null,\r\n    error: null,\r\n    gameStarted:false,\r\n}\r\n\r\nconst roomsSlice = createSlice({\r\n    name: \"room\",\r\n    initialState:initialRoomState,\r\n    reducers: {\r\n        ioCreateRoom(state,action){\r\n        },\r\n        roomCreated(state,{action,payload}){\r\n            return {...state,...payload}; \r\n        },\r\n        ioEnterRoomCode(state,{action,payload}){            \r\n        },\r\n        updatePlayers(state,{action,payload}){\r\n            return {...state, players: payload}\r\n        },\r\n        updateSelf(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        errorOccured(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        },\r\n        ioPlayerIsReady(state,{action,payload}){\r\n        },\r\n        ioStartGame(state){\r\n\r\n        },\r\n        navigateToGame(state){\r\n            return {\r\n                ...state,\r\n                gameStarted: true\r\n            }\r\n        },\r\n        returnAllRoomData(state,{action,payload}){\r\n            return {...state,...payload}\r\n        },\r\n    }\r\n});\r\n\r\nconst gameSlice = createSlice({\r\n    name:\"game\",\r\n    initialState:initialGameState,\r\n    reducers: {\r\n        updateGameState(state,{action,payload}){\r\n            return{\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        ioGetAllData(state){\r\n        },\r\n        ioPlayerAcknowledged(state){},\r\n        allPlayersAcknowledged(state,{action,payload}){\r\n            return {...state,allAcknowledged:true,showRoles:false}\r\n        },\r\n        ioUpdateSelectedPlayers(state,{action,payload}){\r\n        },\r\n        updateSelectedPlayers(state,{action,payload}){\r\n            return {...state,selectedPlayers:payload}\r\n        },\r\n        ioCastToVote(state,{action,payload}){},\r\n        updateCastToVote(state,{action,payload}){\r\n            return {...state,castToVote:payload}\r\n        },\r\n        ioPlayerCastVote(state,{action,payload}){},\r\n        updateAllowToVote(state,{action,payload}){\r\n            return {...state,allowToVote:payload}\r\n        },\r\n        showWinner(state,{action,payload}){\r\n            return {...state,showWinner:true,knightsWon:payload}\r\n        },\r\n        hideShowWinner(state,{action,payload}){\r\n            return {...state,showWinner:false}\r\n        },\r\n        resetGameState(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                leader:payload.newLeader,\r\n                selectedPlayers: [],\r\n                currentRound:payload.currentRound,\r\n                castToVote: false,\r\n                allowToVote: true,\r\n                showWinner: false,\r\n                knightsWon: false,\r\n                rounds: payload.rounds\r\n            }\r\n        }\r\n    }\r\n}\r\n);\r\n\r\n//Root reducer for usage in the store\r\nexport const rootReducer = combineReducers({\r\n    room: roomsSlice.reducer,\r\n    game: gameSlice.reducer,\r\n});\r\n\r\n//Make action creators accesible \r\n\r\nexport const {\r\n    ioCreateRoom,\r\n    roomCreated,\r\n    navigateToLobby,\r\n    ioEnterRoomCode,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    navigateToGame,\r\n    returnAllRoomData\r\n} = roomsSlice.actions;\r\n\r\nexport const {\r\n    updateGameState,\r\n    ioGetAllData,\r\n    ioPlayerAcknowledged,\r\n    allPlayersAcknowledged,\r\n    ioUpdateSelectedPlayers,\r\n    updateSelectedPlayers,\r\n    ioCastToVote,\r\n    updateCastToVote,\r\n    ioPlayerCastVote,\r\n    updateAllowToVote,\r\n    showWinner,\r\n    hideShowWinner,\r\n    resetGameState\r\n} = gameSlice.actions;\r\n\r\n","import {Game} from '../models/game';\r\nimport Round from '../models/round';\r\n\r\nimport {\r\n    navigateToGame,\r\n} from '../../client/reducers';\r\nimport {\r\n    updateGameState,\r\n    allPlayersAcknowledged,\r\n    updateSelectedPlayers,\r\n    updateCastToVote,\r\n    updateAllowToVote,\r\n    showWinner,\r\n    hideShowWinner,\r\n    resetGameState\r\n} from '../../client/reducers';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport default class GameController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.games = new Map();\r\n    }\r\n\r\n    createGame = function(room){\r\n        const game = new Game(room);\r\n        this.games.set(room.roomCode,game)\r\n        return game;\r\n    } \r\n\r\n    checkAllPlayersAcknowledged = function(roomCode){\r\n        let game = this.games.get(roomCode);\r\n        game.playersAcknowledgedRole++;\r\n        if(game.playersAcknowledgedRole === game.players.length){\r\n            this.io.in(roomCode).emit(allPlayersAcknowledged.type)\r\n        }\r\n        return game;\r\n    }\r\n\r\n    sendSelectedPlayersToRoom = function(roomCode, selectedPlayers){\r\n        this.io.in(roomCode).emit(updateSelectedPlayers.type,selectedPlayers);\r\n    }\r\n\r\n    updateCastToVote = function(roomCode, castToVote){\r\n        this.castToVote = castToVote;\r\n        this.io.in(roomCode).emit(updateCastToVote.type,castToVote);\r\n    }\r\n\r\n    getGameFromRoomcode = function(roomCode){\r\n        return this.games.get(roomCode);\r\n    }\r\n\r\n    setGameWithRoomcode = function(roomCode,game){\r\n        this.games.set(roomCode,game)\r\n    }\r\n\r\n    updatePlayerVote = function(gameToUpdate,selfId,missionPass){\r\n        let game = gameToUpdate;\r\n        missionPass ? game.rounds[game.currentRound].numberOfPass++ : game.rounds[game.currentRound].numberOfFail++;\r\n        let playerName = this.getNameFromId(game,selfId);\r\n        game.rounds[game.currentRound].playersOnMission.push(playerName);\r\n        return game;\r\n    }\r\n\r\n    checkAllPlayersVoted = function(roomCode){\r\n        const game = this.getGameFromRoomcode(roomCode)\r\n        const currentRound = game.rounds[game.currentRound]\r\n        if((currentRound.numberOfFail + currentRound.numberOfPass) === game.missionRules[game.players.length-5][game.currentRound]){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    checkIfKnightsWin = function(roomCode){\r\n        let game = this.games.get(roomCode)\r\n        let currentRound = game.rounds[game.currentRound]\r\n        //if mission fails then spies won\r\n        if(currentRound.numberOfFail>=1 && game.players.length<7){\r\n            game.rounds[game.currentRound].knightsWon = false;\r\n            this.games.set(roomCode,game)\r\n            return false;\r\n        } else if (currentRound.numberOfFail>=2 && game.players.length >= 7 ){\r\n            game.rounds[game.currentRound].knightsWon = false;\r\n            this.games.set(roomCode,game)\r\n            return false;\r\n        } else {\r\n            game.rounds[game.currentRound].knightsWon = true;\r\n            this.games.set(roomCode,game)\r\n            return true;\r\n        }\r\n    }\r\n\r\n    transitionRound = function(roomCode){\r\n        let game = this.getGameFromRoomcode(roomCode);\r\n        let knightsWon = this.checkIfKnightsWin(roomCode);\r\n        this.storeWinner(knightsWon,this.getGameFromRoomcode(roomCode)) \r\n        this.incrementRound(game);\r\n        //send something back to the front-end to show the winner \r\n        this.io.in(roomCode).emit(showWinner.type,knightsWon);\r\n        setTimeout(()=>{\r\n            //wait 30 seconds and then\r\n            // hide the winners \r\n            this.io.in(roomCode).emit(hideShowWinner.type);\r\n            this.io.in(roomCode).emit(resetGameState.type,{rounds:game.rounds,currentRound:game.currentRound,newLeader:game.leader});\r\n        },10000)\r\n            \r\n            // increment the round and reset what needs to be reset\r\n    }\r\n\r\n    //need to add a new blank round\r\n    //set game.currentRound++\r\n    //game.selectedPlayers back to []\r\n    //game.leader = ''\r\n    //\r\n\r\n    storeWinner = function(knightsWin,game){\r\n        let updatedGame = game; \r\n        updatedGame.rounds[game.currentRound].knightsWon = knightsWin;\r\n        this.setGameWithRoomcode(updatedGame.roomCode, updatedGame);\r\n    }\r\n\r\n    incrementRound = function(game){\r\n        let updatedGame = game; \r\n        updatedGame.currentRound++;\r\n        updatedGame.leader = updatedGame.incrementMissionLeader(updatedGame.players,updatedGame.leader);\r\n        this.setGameWithRoomcode(updatedGame.roomCode,updatedGame);\r\n    }\r\n\r\n    //works under the assumption that player names will not be the same\r\n    getNameFromId = (game,providedSelfId) => {\r\n        let playerName = game.players.filter((player)=>{\r\n            return player.playerId===providedSelfId\r\n        })\r\n        if(playerName[0]){\r\n            return playerName[0].selfAlias;\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n\r\n    checkGameOver(rounds){\r\n        let timesKnightsWon = 0;\r\n        let timesSpiesWon = 0;\r\n        let gameOver = false;\r\n        let knightsWonGame = null;\r\n\r\n        rounds.forEach((round)=>{\r\n            if(round.knightsWon === true){\r\n                timesKnightsWon++;\r\n            } else if (round.knightsWon === false){\r\n                timesSpiesWon++;\r\n            }\r\n        })\r\n\r\n        if(timesKnightsWon===3){\r\n            gameOver = true;\r\n            knightsWonGame = true;\r\n            return [gameOver,knightsWonGame]\r\n        } else if (timesSpiesWon===3){\r\n            gameOver = true;\r\n            knightsWonGame = false;\r\n            return [gameOver,knightsWonGame]\r\n        } else {\r\n            return [false,null]\r\n        }\r\n    }\r\n}\r\n\r\nexport const communicateStartOfGame = (io, toRoom, game) => {\r\n    io.in(toRoom).emit(navigateToGame.type);\r\n    io.in(toRoom).emit(updateGameState.type,game);\r\n}\r\n\r\nexport const communicatePlayerCantVote = (io,selfId) => {\r\n    io.to(selfId).emit(updateAllowToVote.type,false)\r\n}\r\n\r\n\r\n","import {\r\n    roomCreated,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    returnAllRoomData\r\n} from '../../client/reducers';\r\n\r\nimport { Room } from '../models/room';\r\n\r\n// one instance is made on server start up\r\nexport default class LobbyController{\r\n\r\n    constructor(io){\r\n        this.io=io;\r\n        this.rooms = new Map();\r\n        this.playersToRooms = new Map();\r\n    }\r\n\r\n    createRoom = function(playerId){\r\n        const newRoom = new Room(playerId);\r\n        this.addToRoomMap(newRoom);\r\n        this.addPlayerToRoomMap(newRoom,playerId);\r\n        this.io.to(playerId).emit(roomCreated.type,this.formattedRoom(newRoom,playerId));\r\n        return newRoom.roomCode\r\n    }\r\n\r\n    joinRoom = function(enteredRoomCode,socket){\r\n        if(this.checkRoomExists(enteredRoomCode)){\r\n            if(!this.roomIsFull(enteredRoomCode)){\r\n                socket.join(enteredRoomCode);\r\n                const room = this.rooms.get(enteredRoomCode)\r\n                this.addPlayerToRoomMap(room,socket.id)\r\n                const players = this.addPlayerToRoom(enteredRoomCode,socket.id)\r\n                //update this players state \r\n                this.io.to(socket.id).emit(updateSelf.type,this.formattedPlayer(enteredRoomCode,players,socket.id));\r\n                //update all players state with the list of players\r\n                this.io.in(enteredRoomCode).emit(updatePlayers.type,players);\r\n            } else {\r\n                this.io.to(socket.id).emit(errorOccured.type,'roomIsFull');\r\n            }\r\n        } else{\r\n            \r\n        }          \r\n    }\r\n\r\n    playerLeft = function(playerId){\r\n        try{\r\n            this.removePlayerFromRoom(playerId)\r\n        } catch(error){\r\n            console.log(chalk.red('an error occured trying to remove a player from their room'));\r\n            console.log(error);\r\n        }  \r\n    }\r\n\r\n    addToRoomMap = function(newRoom){\r\n        return this.rooms.set(newRoom.roomCode,newRoom);\r\n    }\r\n\r\n    addPlayerToRoomMap = function(newRoom,playerId){\r\n        return this.playersToRooms.set(playerId,newRoom.roomCode);\r\n    }\r\n\r\n    formattedRoom = function(newRoom,playerId){\r\n        return {\r\n            roomCode: newRoom.roomCode,\r\n            selfId: playerId,\r\n            selfAlias: newRoom.players[0].selfAlias,\r\n            players: newRoom.players\r\n        }\r\n    }\r\n\r\n    formattedPlayer = function(roomCode, playersArray,playerId){\r\n\r\n        const selfAlias = playersArray.filter((player)=>{\r\n            return player.selfId === playerId\r\n        }).selfAlias\r\n\r\n        return {\r\n            roomCode: roomCode, \r\n            selfId: playerId,\r\n            selfAlias\r\n        }\r\n    }\r\n\r\n    checkRoomExists(enteredCode){\r\n        return this.rooms.has(enteredCode)\r\n    }\r\n\r\n    addPlayerToRoom(enteredRoomCode, player){\r\n        let room = this.rooms.get(enteredRoomCode);\r\n        if(room){\r\n            if(room.players.length<10){\r\n                room.addPlayer(player);\r\n            }\r\n            return room.players;\r\n        } else {\r\n            console.log(chalk.red(`no room was found for ${enteredCode}`))\r\n        }\r\n    }\r\n\r\n    removePlayerFromRoom(playerId){\r\n        if(this.playersToRooms.size===0 || this.playersToRooms.get(playerId) === undefined){\r\n            return;\r\n        }\r\n        let roomName = this.playersToRooms.get(playerId);\r\n        let playerRoom = this.rooms.get(roomName);\r\n        if(playerRoom){\r\n            \r\n            let remainingPlayers = (playerRoom.players).filter((player)=>{\r\n                return player.playerId !== playerId\r\n            });\r\n    \r\n            playerRoom = {\r\n                ...playerRoom, \r\n                players:remainingPlayers\r\n            }\r\n    \r\n            if(playerRoom.players.length===0){\r\n                this.rooms.delete(roomName);    \r\n            } else {\r\n                this.rooms.set(roomName,playerRoom);\r\n                this.io.in(roomName).emit(updatePlayers.type,remainingPlayers);\r\n            } \r\n        }\r\n    }\r\n\r\n    roomIsFull = function(roomCode) {\r\n        let room = this.rooms.get(roomCode);\r\n        return room.players.length < 10 ? false : true; \r\n    }\r\n\r\n    //returns an updated player array where the callingPlayer's isReady property is flipped\r\n    updatePlayerReadiness = function(callingPlayerId){\r\n        const room = this.rooms.get(this.playersToRooms.get(callingPlayerId))\r\n        const updatedPlayerArray = (room.players||[]).map((player)=>{\r\n            if(player.playerId === callingPlayerId){\r\n                return {...player,readyToStart:!player.readyToStart}\r\n            } else {\r\n                return player;\r\n            }\r\n        })\r\n        return updatedPlayerArray\r\n    }\r\n\r\n    sendUpdatedPlayersToRoom = function(updatedPlayers,enteredRoomCode){\r\n        this.io.in(enteredRoomCode).emit(updatePlayers.type,updatedPlayers);\r\n    }\r\n\r\n    getRoom = function(enteredRoomCode){\r\n        return this.rooms.get(enteredRoomCode);\r\n    }\r\n\r\n    emitAllRoomData = function(enteredRoomCode, socketId){\r\n        //Problem here is that the socket id changes between refreshes\r\n        //Would have to implement a way to cache the player session\r\n    }\r\n\r\n}\r\n\r\n\r\n","import LobbyController from \"./lobbyController\";\r\nimport GameController, {communicateStartOfGame,communicatePlayerCantVote} from \"./gameController\";\r\n\r\nimport {\r\n    ioCreateRoom,\r\n    ioEnterRoomCode,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    errorOccured,\r\n    ioPlayerAcknowledged,\r\n    ioUpdateSelectedPlayers,\r\n    ioGetAllData,\r\n    ioCastToVote,\r\n    ioPlayerCastVote\r\n} from '../../client/reducers';\r\n\r\n//Handles socket \r\nexport default class MainController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.lobbyController = new LobbyController(this.io);\r\n        this.gameController = new GameController(this.io);\r\n\r\n        this.io.on(\"connection\", (socket) => {\r\n\r\n            socket.on(ioCreateRoom.type,()=>{\r\n                socket.join(this.lobbyController.createRoom(socket.id));\r\n            });\r\n    \r\n            socket.on(ioEnterRoomCode.type,(enteredRoomCode)=>{\r\n                 this.lobbyController.joinRoom(enteredRoomCode,socket);\r\n            });\r\n\r\n            socket.on(\"disconnect\",()=>{\r\n               this.lobbyController.playerLeft(socket.id)\r\n            })\r\n\r\n            socket.on(ioPlayerIsReady.type,(payload)=>{\r\n                const updatedPlayers = this.lobbyController.updatePlayerReadiness(payload.playerId);\r\n                this.lobbyController.rooms.get(payload.roomCode).updatePlayers(updatedPlayers);\r\n                this.lobbyController.sendUpdatedPlayersToRoom(updatedPlayers,payload.roomCode);\r\n            });\r\n\r\n            socket.on(ioStartGame.type,(enteredRoomCode)=>{\r\n                const room = this.lobbyController.getRoom(enteredRoomCode)\r\n                if(room){\r\n                    let game = this.gameController.createGame(room);\r\n                    communicateStartOfGame(io,room.roomCode,game);\r\n                } else {\r\n                    console.log('Tried to create a gameController without valid room object passed. Passed to function:')\r\n                    console.log(room)\r\n                }\r\n            })\r\n\r\n            socket.on(ioGetAllData.type,(enteredRoomCode)=>{\r\n                if(this.lobbyController.checkRoomExists(enteredRoomCode)){\r\n                    this.lobbyController.emitAllRoomData(enteredRoomCode,socket.id)\r\n                } else {\r\n                    io.to(socket.id).emit(errorOccured.type,'No Such Room Exists...');\r\n                }\r\n            })\r\n\r\n            socket.on(ioPlayerAcknowledged.type,(enteredRoomCode)=>{\r\n                this.gameController.setGameWithRoomcode(this.gameController.checkAllPlayersAcknowledged(enteredRoomCode));\r\n            })\r\n\r\n            socket.on(ioUpdateSelectedPlayers.type,(payload)=>{\r\n                this.gameController.sendSelectedPlayersToRoom(payload.roomCode,payload.newSelectedPlayers)\r\n            })\r\n\r\n            socket.on(ioCastToVote.type,(payload)=>{\r\n                this.gameController.updateCastToVote(payload.roomCode,payload.castToVote)\r\n            })\r\n\r\n            socket.on(ioPlayerCastVote.type,(payload)=>{\r\n                this.gameController.setGameWithRoomcode(this.gameController.updatePlayerVote(this.gameController.getGameFromRoomcode(payload.roomCode),payload.selfId,payload.missionPass));\r\n                communicatePlayerCantVote(io,payload.selfId);\r\n                let allPlayersVoted = this.gameController.checkAllPlayersVoted(payload.roomCode);\r\n                if(allPlayersVoted){\r\n                    this.gameController.transitionRound(payload.roomCode);\r\n                    let [gameOver,knightsWonGame] = this.gameController.checkGameOver(this.gameController.getGameFromRoomcode(payload.roomCode).rounds);\r\n                    if(!gameOver){\r\n                    } else {\r\n                        console.log('Game over')\r\n                    }\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import Round from '../models/round';\r\nimport { Room } from './room';\r\n\r\nexport class Game {\r\n    constructor(room){\r\n        this.roomCode = room.roomCode;\r\n        this.players = [...room.players];\r\n        this.numberOfPlayers = this.players.length;\r\n        let selectedRoles = this.selectRoles(this.players)\r\n        this.spies = selectedRoles.spies;\r\n        this.knights = selectedRoles.knights;\r\n        this.rounds = [\r\n            new Round(),\r\n            new Round(),\r\n            new Round(),\r\n            new Round(),\r\n            new Round(),\r\n        ];\r\n        this.leader = this.selectMissionLeader(this.players);\r\n        this.showRoles = true;\r\n        this.playersAcknowledgedRole = 0;\r\n        this.castToVote = false;\r\n        this.currentRound = 0;\r\n        this.missionRules = [\r\n            [2,3,2,3,3], //5 players\r\n            [2,3,4,3,4], //6 players\r\n            [2,3,3,4,4], //7 players\r\n            [3,4,4,5,5], //8 players\r\n            [3,4,4,5,5], //9 players\r\n            [3,4,4,5,5] //10 players\r\n        ]\r\n    }\r\n\r\n    //selects 1/3 (rounded up) of players to be spies \r\n    selectRoles = function(players){\r\n        let playersArray = [...players];\r\n        let spies = []\r\n        let knights = []\r\n        //assign the spies\r\n        while(spies.length<Math.ceil((players.length*0.33))){\r\n            let randomIndex = Math.ceil((Math.random()*playersArray.length))-1;\r\n            spies.push(playersArray[randomIndex])\r\n            playersArray.splice(randomIndex,1)\r\n        }\r\n        knights = playersArray; //assign the remaining knights\r\n\r\n        return {spies, knights};\r\n    }\r\n\r\n    selectMissionLeader = function(players){\r\n        let randomIndex = Math.ceil((Math.random()*players.length))-1;\r\n        return players[randomIndex].playerId;\r\n    }\r\n\r\n    // incrementMissionLeader = function(players,previousMissionLeader)\r\n    // if previous leader is number 4, should return 5\r\n    // if previous leader is 5 should return 1\r\n\r\n    incrementMissionLeader = function(players,previousMissionLeader){\r\n        let previousLeaderIndex = players.findIndex(player => player.playerId===previousMissionLeader);\r\n        let leaderIsLast = previousLeaderIndex === players.length-1;\r\n        if(leaderIsLast){\r\n            return players[0].playerId;\r\n        } else {\r\n            return players[previousLeaderIndex+1].playerId;\r\n        }\r\n    }\r\n}","import randomstring from \"randomstring\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport class Room {\r\n\r\n    //callingPlayerId: socket.id\r\n    constructor(callingPlayerId){\r\n        this.roomCode = this.generateRoomCode();\r\n        this.players = [];\r\n        this.addPlayer(callingPlayerId)\r\n    }\r\n\r\n    generateRoomCode = function(){\r\n        return randomstring.generate({\r\n            length: 6,\r\n            charset: 'alphanumeric'\r\n        });\r\n    }\r\n\r\n    addPlayer = function(callingPlayerId){\r\n        this.players.push({\r\n            playerId:callingPlayerId,\r\n            selfAlias:`Player${this.players.length+1}`,\r\n            readyToStart: false\r\n        });\r\n    }\r\n\r\n    updatePlayers = function(newPlayerArray){\r\n        this.players = newPlayerArray;\r\n    }\r\n\r\n}","export default class Round {\r\n    constructor(){\r\n        this.playersOnMission= [];\r\n        this.numberOfPass = 0;\r\n        this.numberOfFail = 0;\r\n        this.knightsWon = undefined;\r\n    }\r\n}","import { Server } from 'socket.io';\r\nimport path from 'path';\r\n\r\nexport default (httpServer) => {\r\n\r\n    console.log('Setting up socket.io server...');\r\n    const io = new Server(httpServer,{\r\n        cors: {\r\n            origin: \"*\"\r\n        },\r\n    });\r\n\r\n    return io;\r\n}","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"express\");","module.exports = require(\"randomstring\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\r\nimport socketServer from \"./socket\";\r\nimport {createServer} from 'http';\r\nimport path from 'path';\r\nconst publicPath = path.join(__dirname, '..', 'public','dist');\r\nimport MainController from './controllers/mainController';\r\n\r\nconst expressServer = express();\r\nexpressServer.use(express.static(publicPath));\r\nexpressServer.get('*', (req, res)=>{\r\n    res.sendFile(path.join(publicPath,'index.html'));\r\n})\r\n\r\nconst httpServer = createServer(expressServer);\r\n\r\nconst io = socketServer(httpServer);\r\n\r\nconst port = process.env.PORT || 3000\r\nhttpServer.listen(port, ()=> {\r\n    console.log(`Server running on port ${port}`);\r\n});\r\n\r\nconst mainController = new MainController(io);\r\n\r\n\r\n"],"names":["configureStore","createSlice","combineReducers","PayloadAction","initialGameState","players","spies","knights","rounds","leader","showRoles","allAcknowledged","selectedPlayers","currentRound","castToVote","allowToVote","showWinner","knightsWon","initialRoomState","selfId","selfAlias","roomCode","error","gameStarted","roomsSlice","name","initialState","reducers","ioCreateRoom","state","action","roomCreated","payload","ioEnterRoomCode","updatePlayers","updateSelf","errorOccured","ioPlayerIsReady","ioStartGame","navigateToGame","returnAllRoomData","gameSlice","updateGameState","ioGetAllData","ioPlayerAcknowledged","allPlayersAcknowledged","ioUpdateSelectedPlayers","updateSelectedPlayers","ioCastToVote","updateCastToVote","ioPlayerCastVote","updateAllowToVote","hideShowWinner","resetGameState","newLeader","rootReducer","room","reducer","game","actions","navigateToLobby","Game","Round","io","GameController","games","set","get","playersAcknowledgedRole","length","emit","type","gameToUpdate","missionPass","numberOfPass","numberOfFail","playerName","getNameFromId","playersOnMission","push","getGameFromRoomcode","missionRules","checkIfKnightsWin","storeWinner","incrementRound","setTimeout","knightsWin","updatedGame","setGameWithRoomcode","incrementMissionLeader","providedSelfId","filter","player","playerId","Map","timesKnightsWon","timesSpiesWon","gameOver","knightsWonGame","forEach","round","communicateStartOfGame","toRoom","communicatePlayerCantVote","to","Room","LobbyController","newRoom","addToRoomMap","addPlayerToRoomMap","formattedRoom","enteredRoomCode","socket","checkRoomExists","roomIsFull","join","rooms","id","addPlayerToRoom","formattedPlayer","removePlayerFromRoom","console","log","chalk","red","playersToRooms","playersArray","callingPlayerId","updatedPlayerArray","map","readyToStart","updatedPlayers","socketId","enteredCode","has","addPlayer","size","undefined","roomName","playerRoom","remainingPlayers","MainController","lobbyController","gameController","on","createRoom","joinRoom","playerLeft","updatePlayerReadiness","sendUpdatedPlayersToRoom","getRoom","createGame","emitAllRoomData","checkAllPlayersAcknowledged","sendSelectedPlayersToRoom","newSelectedPlayers","updatePlayerVote","allPlayersVoted","checkAllPlayersVoted","transitionRound","checkGameOver","Math","ceil","randomIndex","random","splice","previousMissionLeader","previousLeaderIndex","findIndex","leaderIsLast","numberOfPlayers","selectedRoles","selectRoles","selectMissionLeader","randomstring","generate","charset","newPlayerArray","generateRoomCode","Server","path","httpServer","cors","origin","express","socketServer","createServer","publicPath","__dirname","expressServer","use","req","res","sendFile","port","process","env","PORT","listen","mainController"],"sourceRoot":""}