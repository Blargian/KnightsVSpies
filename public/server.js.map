{"version":3,"file":"server.js","mappings":"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","sources":["webpack://spyspy/./client/reducers.js","webpack://spyspy/./server/controllers/gameController.js","webpack://spyspy/./server/controllers/lobbyController.js","webpack://spyspy/./server/controllers/mainController.js","webpack://spyspy/./server/models/game.js","webpack://spyspy/./server/models/room.js","webpack://spyspy/./server/models/round.js","webpack://spyspy/./server/socket.js","webpack://spyspy/external commonjs \"@reduxjs/toolkit\"","webpack://spyspy/external commonjs \"chalk\"","webpack://spyspy/external commonjs \"express\"","webpack://spyspy/external commonjs \"randomstring\"","webpack://spyspy/external commonjs \"socket.io\"","webpack://spyspy/external commonjs \"socket.io-client\"","webpack://spyspy/external node-commonjs \"http\"","webpack://spyspy/external node-commonjs \"path\"","webpack://spyspy/webpack/bootstrap","webpack://spyspy/webpack/runtime/compat get default export","webpack://spyspy/webpack/runtime/define property getters","webpack://spyspy/webpack/runtime/hasOwnProperty shorthand","webpack://spyspy/webpack/runtime/make namespace object","webpack://spyspy/./server/server.js"],"sourcesContent":["import { configureStore, createSlice, combineReducers, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialGameState = {\r\n    players: [],\r\n    spies: [],\r\n    knights: [],\r\n    round: [\r\n\r\n    ],\r\n    leader: '',\r\n    showRoles: false,\r\n}\r\n\r\nconst initialRoomState = {\r\n    selfId: '',\r\n    selfAlias: '',\r\n    players: [],\r\n    roomCode: null,\r\n    error: null,\r\n    gameStarted:false,\r\n}\r\n\r\nconst roomsSlice = createSlice({\r\n    name: \"room\",\r\n    initialState:initialRoomState,\r\n    reducers: {\r\n        ioCreateRoom(state,action){\r\n        },\r\n        roomCreated(state,{action,payload}){\r\n            return {...state,...payload}; \r\n        },\r\n        ioEnterRoomCode(state,{action,payload}){            \r\n        },\r\n        updatePlayers(state,{action,payload}){\r\n            return {...state, players: payload}\r\n        },\r\n        updateSelf(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        errorOccured(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        },\r\n        ioPlayerIsReady(state,{action,payload}){\r\n        },\r\n        ioStartGame(state){\r\n\r\n        },\r\n        navigateToGame(state){\r\n            return {\r\n                ...state,\r\n                gameStarted: true\r\n            }\r\n        },\r\n        returnAllRoomData(state,{action,payload}){\r\n            return {...state,...payload}\r\n        }\r\n    }\r\n});\r\n\r\nconst gameSlice = createSlice({\r\n    name:\"game\",\r\n    initialState:initialGameState,\r\n    reducers: {\r\n        updateGameState(state,{action,payload}){\r\n            return{\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        ioGetAllData(state){\r\n        },\r\n    }\r\n}\r\n);\r\n\r\n//Root reducer for usage in the store\r\nexport const rootReducer = combineReducers({\r\n    room: roomsSlice.reducer,\r\n    game: gameSlice.reducer,\r\n});\r\n\r\n//Make action creators accesible \r\n\r\nexport const {\r\n    ioCreateRoom,\r\n    roomCreated,\r\n    navigateToLobby,\r\n    ioEnterRoomCode,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    navigateToGame,\r\n    returnAllRoomData\r\n} = roomsSlice.actions;\r\n\r\nexport const {\r\n    updateGameState,\r\n    ioGetAllData,\r\n} = gameSlice.actions;\r\n\r\n","import {Game} from '../models/game'\r\nimport {\r\n    navigateToGame,\r\n} from '../../client/reducers';\r\nimport {\r\n    updateGameState\r\n} from '../../client/reducers';\r\n\r\nexport default class GameController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.games = new Map();\r\n    }\r\n\r\n    createGame = function(room){\r\n        const game = new Game(room);\r\n        game.selectRoles();\r\n        game.selectMissionLeader();\r\n        this.games.set(room.roomCode,game)\r\n        this.io.in(room.roomCode).emit(navigateToGame.type);\r\n        this.io.in(room.roomCode).emit(updateGameState.type,game);\r\n    } \r\n}","import {\r\n    roomCreated,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    returnAllRoomData\r\n} from '../../client/reducers';\r\n\r\nimport { Room } from '../models/room';\r\nimport chalk from 'chalk';\r\n\r\n// one instance is made on server start up\r\nexport default class LobbyController{\r\n\r\n    constructor(io){\r\n        this.io=io;\r\n        this.rooms = new Map();\r\n        this.playersToRooms = new Map();\r\n    }\r\n\r\n    createRoom = function(playerId){\r\n        const newRoom = new Room(playerId);\r\n        this.addToRoomMap(newRoom);\r\n        this.addPlayerToRoomMap(newRoom,playerId);\r\n        this.io.to(playerId).emit(roomCreated.type,this.formattedRoom(newRoom,playerId));\r\n        return newRoom.roomCode\r\n    }\r\n\r\n    joinRoom = function(enteredRoomCode,socket){\r\n        if(this.checkRoomExists(enteredRoomCode)){\r\n            if(!this.roomIsFull(enteredRoomCode)){\r\n                socket.join(enteredRoomCode);\r\n                const room = this.rooms.get(enteredRoomCode)\r\n                this.addPlayerToRoomMap(room,socket.id)\r\n                const players = this.addPlayerToRoom(enteredRoomCode,socket.id)\r\n                //update this players state \r\n                this.io.to(socket.id).emit(updateSelf.type,this.formattedPlayer(enteredRoomCode,players,socket.id));\r\n                //update all players state with the list of players\r\n                this.io.in(enteredRoomCode).emit(updatePlayers.type,players);\r\n            } else {\r\n                this.io.to(socket.id).emit(errorOccured.type,'roomIsFull');\r\n            }\r\n        } else{\r\n            \r\n        }          \r\n    }\r\n\r\n    playerLeft = function(playerId){\r\n        try{\r\n            this.removePlayerFromRoom(playerId)\r\n        } catch(error){\r\n            console.log(chalk.red('an error occured trying to remove a player from their room'));\r\n            console.log(error);\r\n        }  \r\n    }\r\n\r\n    addToRoomMap = function(newRoom){\r\n        return this.rooms.set(newRoom.roomCode,newRoom);\r\n    }\r\n\r\n    addPlayerToRoomMap = function(newRoom,playerId){\r\n        return this.playersToRooms.set(playerId,newRoom.roomCode);\r\n    }\r\n\r\n    formattedRoom = function(newRoom,playerId){\r\n        return {\r\n            roomCode: newRoom.roomCode,\r\n            selfId: playerId,\r\n            selfAlias: newRoom.players[0].selfAlias,\r\n            players: newRoom.players\r\n        }\r\n    }\r\n\r\n    formattedPlayer = function(roomCode, playersArray,playerId){\r\n\r\n        const selfAlias = playersArray.filter((player)=>{\r\n            return player.selfId === playerId\r\n        }).selfAlias\r\n\r\n        return {\r\n            roomCode: roomCode, \r\n            selfId: playerId,\r\n            selfAlias\r\n        }\r\n    }\r\n\r\n    checkRoomExists(enteredCode){\r\n        return this.rooms.has(enteredCode)\r\n    }\r\n\r\n    addPlayerToRoom(enteredRoomCode, player){\r\n        let room = this.rooms.get(enteredRoomCode);\r\n        if(room){\r\n            if(room.players.length<10){\r\n                room.addPlayer(player);\r\n            }\r\n            return room.players;\r\n        } else {\r\n            console.log(chalk.red(`no room was found for ${enteredCode}`))\r\n        }\r\n    }\r\n\r\n    removePlayerFromRoom(playerId){\r\n        console.log(chalk.yellow('Player was removed from the room'))\r\n        if(this.playersToRooms.size===0 || this.playersToRooms.get(playerId) === undefined){\r\n            return;\r\n        }\r\n        let roomName = this.playersToRooms.get(playerId);\r\n        let playerRoom = this.rooms.get(roomName);\r\n        if(playerRoom){\r\n            \r\n            let remainingPlayers = (playerRoom.players).filter((player)=>{\r\n                return player.playerId !== playerId\r\n            });\r\n    \r\n            playerRoom = {\r\n                ...playerRoom, \r\n                players:remainingPlayers\r\n            }\r\n    \r\n            if(playerRoom.players.length===0){\r\n                this.rooms.delete(roomName);    \r\n            } else {\r\n                this.rooms.set(roomName,playerRoom);\r\n                this.io.in(roomName).emit(updatePlayers.type,remainingPlayers);\r\n            } \r\n        }\r\n    }\r\n\r\n    roomIsFull = function(roomCode) {\r\n        let room = this.rooms.get(roomCode);\r\n        return room.players.length < 10 ? false : true; \r\n    }\r\n\r\n    //returns an updated player array where the callingPlayer's isReady property is flipped\r\n    updatePlayerReadiness = function(callingPlayerId){\r\n        const room = this.rooms.get(this.playersToRooms.get(callingPlayerId))\r\n        const updatedPlayerArray = (room.players||[]).map((player)=>{\r\n            if(player.playerId === callingPlayerId){\r\n                return {...player,readyToStart:!player.readyToStart}\r\n            } else {\r\n                return player;\r\n            }\r\n        })\r\n        return updatedPlayerArray\r\n    }\r\n\r\n    sendUpdatedPlayersToRoom = function(updatedPlayers,enteredRoomCode){\r\n        this.io.in(enteredRoomCode).emit(updatePlayers.type,updatedPlayers);\r\n    }\r\n\r\n    getRoom = function(enteredRoomCode){\r\n        return this.rooms.get(enteredRoomCode);\r\n    }\r\n\r\n    emitAllRoomData = function(enteredRoomCode, socketId){\r\n        //Problem here is that the socket id changes between refreshes\r\n        //Would have to implement a way to cache the player session\r\n    }\r\n\r\n}\r\n\r\n\r\n","import LobbyController from \"./lobbyController\";\r\nimport GameController from \"./gameController\";\r\nimport chalk from 'chalk';\r\n\r\nimport {\r\n    ioCreateRoom,\r\n    ioEnterRoomCode,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    errorOccured\r\n} from '../../client/reducers';\r\nimport {\r\n    ioGetAllData\r\n} from '../../client/reducers'\r\n\r\n//Handles socket \r\nexport default class MainController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.lobbyController = new LobbyController(this.io);\r\n        this.gameController = new GameController(this.io);\r\n\r\n        this.io.on(\"connection\", (socket) => {\r\n\r\n            socket.on(ioCreateRoom.type,()=>{\r\n                socket.join(this.lobbyController.createRoom(socket.id));\r\n            });\r\n    \r\n            socket.on(ioEnterRoomCode.type,(enteredRoomCode)=>{\r\n                 this.lobbyController.joinRoom(enteredRoomCode,socket);\r\n            });\r\n\r\n            socket.on(\"disconnect\",()=>{\r\n               this.lobbyController.playerLeft(socket.id)\r\n            })\r\n\r\n            socket.on(ioPlayerIsReady.type,(payload)=>{\r\n                const updatedPlayers = this.lobbyController.updatePlayerReadiness(payload.playerId);\r\n                this.lobbyController.rooms.get(payload.roomCode).updatePlayers(updatedPlayers);\r\n                this.lobbyController.sendUpdatedPlayersToRoom(updatedPlayers,payload.roomCode);\r\n            });\r\n\r\n            socket.on(ioStartGame.type,(enteredRoomCode)=>{\r\n                const room = this.lobbyController.getRoom(enteredRoomCode)\r\n                if(room){\r\n                    this.gameController.createGame(room);\r\n                } else {\r\n                    console.log(chalk.red('Tried to create a gameController without valid room object passed. Passed to function:'))\r\n                    console.log(chalk.red(room))\r\n                }\r\n            })\r\n\r\n            socket.on(ioGetAllData.type,(enteredRoomCode)=>{\r\n                if(this.lobbyController.checkRoomExists(enteredRoomCode)){\r\n                    this.lobbyController.emitAllRoomData(enteredRoomCode,socket.id)\r\n                } else {\r\n                    io.to(socket.id).emit(errorOccured.type,'No Such Room Exists...');\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import {round as firstRound} from '../models/round';\r\nimport { Room } from './room';\r\n\r\nexport class Game {\r\n    constructor(room){\r\n        this.players = room.players;\r\n        this.spies = [];\r\n        this.knights = [];\r\n        this.round = [\r\n            firstRound\r\n        ];\r\n        this.leader = '';\r\n        this.showRoles = true;\r\n    }\r\n\r\n    //selects 1/3 (rounded up) of players to be spies \r\n    selectRoles = function(){\r\n        let playersArray = [...this.players];\r\n        let randomIndex;\r\n        //assign the spies\r\n        while(this.spies.length<Math.ceil((this.players.length*0.33))){\r\n            let randomIndex = Math.ceil((Math.random()*playersArray.length))-1;\r\n            this.spies.push(playersArray[randomIndex])\r\n            playersArray.splice(randomIndex,1)\r\n        }\r\n        this.knights = playersArray; //assign the remaining knights\r\n    }\r\n\r\n    selectMissionLeader = function(){\r\n        let randomIndex = Math.ceil((Math.random()*this.players.length))-1;\r\n        this.leader = this.players[randomIndex].playerId;\r\n    }\r\n}","import randomstring from \"randomstring\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport class Room {\r\n\r\n    //callingPlayerId: socket.id\r\n    constructor(callingPlayerId){\r\n        this.roomCode = this.generateRoomCode();\r\n        this.players = [];\r\n        this.addPlayer(callingPlayerId)\r\n    }\r\n\r\n    generateRoomCode = function(){\r\n        return randomstring.generate({\r\n            length: 6,\r\n            charset: 'alphanumeric'\r\n        });\r\n    }\r\n\r\n    addPlayer = function(callingPlayerId){\r\n        this.players.push({\r\n            playerId:callingPlayerId,\r\n            selfAlias:`Player${this.players.length+1}`,\r\n            readyToStart: false\r\n        });\r\n    }\r\n\r\n    updatePlayers = function(newPlayerArray){\r\n        this.players = newPlayerArray;\r\n    }\r\n\r\n}","export const round = {\r\n    round: 0,\r\n    playersOnMission: [],\r\n    winner: ''\r\n}","import { Server } from 'socket.io';\r\nimport path from 'path';\r\n\r\nexport default (httpServer) => {\r\n\r\n    console.log('Setting up socket.io server...');\r\n    const io = new Server(httpServer,{\r\n        cors: {\r\n            origin: \"*\"\r\n        },\r\n    });\r\n\r\n    return io;\r\n}","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"chalk\");","module.exports = require(\"express\");","module.exports = require(\"randomstring\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\r\nimport socketServer from \"./socket\";\r\nimport {createServer} from 'http';\r\nimport path from 'path';\r\nconst publicPath = path.join(__dirname, '..', 'public','dist');\r\nimport MainController from './controllers/mainController';\r\n\r\nconst expressServer = express();\r\nexpressServer.use(express.static(publicPath));\r\nexpressServer.get('*', (req, res)=>{\r\n    res.sendFile(path.join(publicPath,'index.html'));\r\n})\r\n\r\nconst httpServer = createServer(expressServer);\r\n\r\nconst io = socketServer(httpServer);\r\n\r\nhttpServer.listen(3000, ()=> {\r\n    console.log(`Server running on http://localhost:3000`);\r\n});\r\n\r\nconst mainController = new MainController(io);\r\n\r\n\r\n"],"names":["configureStore","createSlice","combineReducers","PayloadAction","initialGameState","players","spies","knights","round","leader","showRoles","initialRoomState","selfId","selfAlias","roomCode","error","gameStarted","roomsSlice","name","initialState","reducers","ioCreateRoom","state","action","roomCreated","payload","ioEnterRoomCode","updatePlayers","updateSelf","errorOccured","ioPlayerIsReady","ioStartGame","navigateToGame","returnAllRoomData","gameSlice","updateGameState","ioGetAllData","rootReducer","room","reducer","game","actions","navigateToLobby","Game","GameController","io","selectRoles","selectMissionLeader","games","set","emit","type","Map","Room","chalk","LobbyController","playerId","newRoom","addToRoomMap","addPlayerToRoomMap","to","formattedRoom","enteredRoomCode","socket","checkRoomExists","roomIsFull","join","rooms","get","id","addPlayerToRoom","formattedPlayer","removePlayerFromRoom","console","log","red","playersToRooms","playersArray","filter","player","length","callingPlayerId","updatedPlayerArray","map","readyToStart","updatedPlayers","socketId","enteredCode","has","addPlayer","yellow","size","undefined","roomName","playerRoom","remainingPlayers","MainController","lobbyController","gameController","on","createRoom","joinRoom","playerLeft","updatePlayerReadiness","sendUpdatedPlayersToRoom","getRoom","createGame","emitAllRoomData","firstRound","randomIndex","Math","ceil","random","push","splice","randomstring","generate","charset","newPlayerArray","generateRoomCode","playersOnMission","winner","Server","path","httpServer","cors","origin","express","socketServer","createServer","publicPath","__dirname","expressServer","use","req","res","sendFile","listen","mainController"],"sourceRoot":""}