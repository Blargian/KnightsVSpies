{"version":3,"file":"server.js","mappings":"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","sources":["webpack://spyspy/./client/reducers.js","webpack://spyspy/./server/controllers/gameController.js","webpack://spyspy/./server/controllers/lobbyController.js","webpack://spyspy/./server/controllers/mainController.js","webpack://spyspy/./server/models/game.js","webpack://spyspy/./server/models/room.js","webpack://spyspy/./server/models/round.js","webpack://spyspy/./server/socket.js","webpack://spyspy/external commonjs \"@reduxjs/toolkit\"","webpack://spyspy/external commonjs \"chalk\"","webpack://spyspy/external commonjs \"express\"","webpack://spyspy/external commonjs \"randomstring\"","webpack://spyspy/external commonjs \"socket.io\"","webpack://spyspy/external commonjs \"socket.io-client\"","webpack://spyspy/external node-commonjs \"http\"","webpack://spyspy/external node-commonjs \"path\"","webpack://spyspy/webpack/bootstrap","webpack://spyspy/webpack/runtime/compat get default export","webpack://spyspy/webpack/runtime/define property getters","webpack://spyspy/webpack/runtime/hasOwnProperty shorthand","webpack://spyspy/webpack/runtime/make namespace object","webpack://spyspy/./server/server.js"],"sourcesContent":["import { configureStore, createSlice, combineReducers, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialGameState = {\r\n    players: [],\r\n    spies: [],\r\n    knights: [],\r\n    round: [\r\n\r\n    ],\r\n    leader: '',\r\n    showRoles: false,\r\n    allAcknowledged: false,\r\n    selectedPlayers: [],\r\n    currentRound: 0,\r\n    castToVote: false,\r\n    allowToVote: true,\r\n}\r\n\r\nconst initialRoomState = {\r\n    selfId: '',\r\n    selfAlias: '',\r\n    players: [],\r\n    roomCode: null,\r\n    error: null,\r\n    gameStarted:false,\r\n}\r\n\r\nconst roomsSlice = createSlice({\r\n    name: \"room\",\r\n    initialState:initialRoomState,\r\n    reducers: {\r\n        ioCreateRoom(state,action){\r\n        },\r\n        roomCreated(state,{action,payload}){\r\n            return {...state,...payload}; \r\n        },\r\n        ioEnterRoomCode(state,{action,payload}){            \r\n        },\r\n        updatePlayers(state,{action,payload}){\r\n            return {...state, players: payload}\r\n        },\r\n        updateSelf(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        errorOccured(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        },\r\n        ioPlayerIsReady(state,{action,payload}){\r\n        },\r\n        ioStartGame(state){\r\n\r\n        },\r\n        navigateToGame(state){\r\n            return {\r\n                ...state,\r\n                gameStarted: true\r\n            }\r\n        },\r\n        returnAllRoomData(state,{action,payload}){\r\n            return {...state,...payload}\r\n        },\r\n    }\r\n});\r\n\r\nconst gameSlice = createSlice({\r\n    name:\"game\",\r\n    initialState:initialGameState,\r\n    reducers: {\r\n        updateGameState(state,{action,payload}){\r\n            return{\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        ioGetAllData(state){\r\n        },\r\n        ioPlayerAcknowledged(state){},\r\n        allPlayersAcknowledged(state,{action,payload}){\r\n            return {...state,allAcknowledged:true,showRoles:false}\r\n        },\r\n        ioUpdateSelectedPlayers(state,{action,payload}){\r\n        },\r\n        updateSelectedPlayers(state,{action,payload}){\r\n            return {...state,selectedPlayers:payload}\r\n        },\r\n        ioCastToVote(state,{action,payload}){},\r\n        updateCastToVote(state,{action,payload}){\r\n            return {...state,castToVote:payload}\r\n        },\r\n        ioPlayerCastVote(state,{action,payload}){},\r\n        updateAllowToVote(state,{action,payload}){\r\n            return {...state,allowToVote:payload}\r\n        }\r\n    }\r\n}\r\n);\r\n\r\n//Root reducer for usage in the store\r\nexport const rootReducer = combineReducers({\r\n    room: roomsSlice.reducer,\r\n    game: gameSlice.reducer,\r\n});\r\n\r\n//Make action creators accesible \r\n\r\nexport const {\r\n    ioCreateRoom,\r\n    roomCreated,\r\n    navigateToLobby,\r\n    ioEnterRoomCode,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    navigateToGame,\r\n    returnAllRoomData\r\n} = roomsSlice.actions;\r\n\r\nexport const {\r\n    updateGameState,\r\n    ioGetAllData,\r\n    ioPlayerAcknowledged,\r\n    allPlayersAcknowledged,\r\n    ioUpdateSelectedPlayers,\r\n    updateSelectedPlayers,\r\n    ioCastToVote,\r\n    updateCastToVote,\r\n    ioPlayerCastVote,\r\n    updateAllowToVote\r\n} = gameSlice.actions;\r\n\r\n","import {Game} from '../models/game'\r\nimport {\r\n    navigateToGame,\r\n} from '../../client/reducers';\r\nimport {\r\n    updateGameState,\r\n    allPlayersAcknowledged,\r\n    updateSelectedPlayers,\r\n    updateCastToVote,\r\n    updateAllowToVote\r\n} from '../../client/reducers';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport default class GameController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.games = new Map();\r\n    }\r\n\r\n    createGame = function(room){\r\n        const game = new Game(room);\r\n        game.selectRoles();\r\n        game.selectMissionLeader();\r\n        this.games.set(room.roomCode,game)\r\n        this.io.in(room.roomCode).emit(navigateToGame.type);\r\n        this.io.in(room.roomCode).emit(updateGameState.type,game);\r\n    } \r\n\r\n    checkAllPlayersAcknowledged = function(roomCode){\r\n        const game = this.games.get(roomCode);\r\n        game.playersAcknowledgedRole++;\r\n        this.games.set(roomCode,game);\r\n        if(game.playersAcknowledgedRole === game.players.length){\r\n            this.io.in(roomCode).emit(allPlayersAcknowledged.type,)\r\n        }\r\n    }\r\n\r\n    sendSelectedPlayersToRoom = function(roomCode, selectedPlayers){\r\n        this.io.in(roomCode).emit(updateSelectedPlayers.type,selectedPlayers);\r\n    }\r\n\r\n    updateCastToVote = function(roomCode, castToVote){\r\n        console.log(roomCode, castToVote)\r\n        this.castToVote = castToVote;\r\n        this.io.in(roomCode).emit(updateCastToVote.type,castToVote);\r\n    }\r\n\r\n    updatePlayerVote = function(roomCode,selfId,missionPass){\r\n        const game = this.games.get(roomCode);\r\n        missionPass ? game.rounds[game.currentRound].numberOfPass++ : game.rounds[game.currentRound].numberOfFail++;\r\n        console.log(` Number of pass: ${game.rounds[game.currentRound].numberOfPass}`)\r\n        console.log(` Number of fail: ${game.rounds[game.currentRound].numberOfFail}`)\r\n        game.rounds[game.currentRound].playersOnMission.push(selfId);\r\n        this.games.set(roomCode,game);\r\n        this.io.to(selfId).emit(updateAllowToVote.type,false)\r\n    }\r\n\r\n    checkAllPlayersVoted = function(roomCode){\r\n        const game = this.games.get(roomCode)\r\n        const currentRound = game.rounds[game.currentRound]\r\n        console.log(currentRound.numberOfFail)\r\n        console.log(game.players)\r\n        if((currentRound.numberOfFail + currentRound.numberOfPass) === game.missionRules[game.players.length-5][game.currentRound]){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    checkIfKnightsWin = function(roomCode){\r\n        const game = this.games.get(roomCode)\r\n        const currentRound = game.rounds[game.currentRound]\r\n        //if mission fails then spies won\r\n        if(currentRound.numberOfFail>1){\r\n            currentRound.knightsWon = true;\r\n            console.log('Spies won')\r\n            return false;\r\n        //if mission passes then knights won\r\n        } else if (currentRound.numberOfPass === currentRound.playersOnMission.length){\r\n            currentRound.knightsWon = true;\r\n            console.log('Knights won')\r\n            return true;\r\n        }\r\n    }\r\n\r\n    transitionRound = function(){\r\n        console.log('transitioning round')\r\n    }\r\n}","import {\r\n    roomCreated,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    returnAllRoomData\r\n} from '../../client/reducers';\r\n\r\nimport { Room } from '../models/room';\r\nimport chalk from 'chalk';\r\n\r\n// one instance is made on server start up\r\nexport default class LobbyController{\r\n\r\n    constructor(io){\r\n        this.io=io;\r\n        this.rooms = new Map();\r\n        this.playersToRooms = new Map();\r\n    }\r\n\r\n    createRoom = function(playerId){\r\n        const newRoom = new Room(playerId);\r\n        this.addToRoomMap(newRoom);\r\n        this.addPlayerToRoomMap(newRoom,playerId);\r\n        this.io.to(playerId).emit(roomCreated.type,this.formattedRoom(newRoom,playerId));\r\n        return newRoom.roomCode\r\n    }\r\n\r\n    joinRoom = function(enteredRoomCode,socket){\r\n        if(this.checkRoomExists(enteredRoomCode)){\r\n            if(!this.roomIsFull(enteredRoomCode)){\r\n                socket.join(enteredRoomCode);\r\n                const room = this.rooms.get(enteredRoomCode)\r\n                this.addPlayerToRoomMap(room,socket.id)\r\n                const players = this.addPlayerToRoom(enteredRoomCode,socket.id)\r\n                //update this players state \r\n                this.io.to(socket.id).emit(updateSelf.type,this.formattedPlayer(enteredRoomCode,players,socket.id));\r\n                //update all players state with the list of players\r\n                this.io.in(enteredRoomCode).emit(updatePlayers.type,players);\r\n            } else {\r\n                this.io.to(socket.id).emit(errorOccured.type,'roomIsFull');\r\n            }\r\n        } else{\r\n            \r\n        }          \r\n    }\r\n\r\n    playerLeft = function(playerId){\r\n        try{\r\n            this.removePlayerFromRoom(playerId)\r\n        } catch(error){\r\n            console.log(chalk.red('an error occured trying to remove a player from their room'));\r\n            console.log(error);\r\n        }  \r\n    }\r\n\r\n    addToRoomMap = function(newRoom){\r\n        return this.rooms.set(newRoom.roomCode,newRoom);\r\n    }\r\n\r\n    addPlayerToRoomMap = function(newRoom,playerId){\r\n        return this.playersToRooms.set(playerId,newRoom.roomCode);\r\n    }\r\n\r\n    formattedRoom = function(newRoom,playerId){\r\n        return {\r\n            roomCode: newRoom.roomCode,\r\n            selfId: playerId,\r\n            selfAlias: newRoom.players[0].selfAlias,\r\n            players: newRoom.players\r\n        }\r\n    }\r\n\r\n    formattedPlayer = function(roomCode, playersArray,playerId){\r\n\r\n        const selfAlias = playersArray.filter((player)=>{\r\n            return player.selfId === playerId\r\n        }).selfAlias\r\n\r\n        return {\r\n            roomCode: roomCode, \r\n            selfId: playerId,\r\n            selfAlias\r\n        }\r\n    }\r\n\r\n    checkRoomExists(enteredCode){\r\n        return this.rooms.has(enteredCode)\r\n    }\r\n\r\n    addPlayerToRoom(enteredRoomCode, player){\r\n        let room = this.rooms.get(enteredRoomCode);\r\n        if(room){\r\n            if(room.players.length<10){\r\n                room.addPlayer(player);\r\n            }\r\n            return room.players;\r\n        } else {\r\n            console.log(chalk.red(`no room was found for ${enteredCode}`))\r\n        }\r\n    }\r\n\r\n    removePlayerFromRoom(playerId){\r\n        if(this.playersToRooms.size===0 || this.playersToRooms.get(playerId) === undefined){\r\n            return;\r\n        }\r\n        let roomName = this.playersToRooms.get(playerId);\r\n        let playerRoom = this.rooms.get(roomName);\r\n        if(playerRoom){\r\n            \r\n            let remainingPlayers = (playerRoom.players).filter((player)=>{\r\n                return player.playerId !== playerId\r\n            });\r\n    \r\n            playerRoom = {\r\n                ...playerRoom, \r\n                players:remainingPlayers\r\n            }\r\n    \r\n            if(playerRoom.players.length===0){\r\n                this.rooms.delete(roomName);    \r\n            } else {\r\n                this.rooms.set(roomName,playerRoom);\r\n                this.io.in(roomName).emit(updatePlayers.type,remainingPlayers);\r\n            } \r\n        }\r\n    }\r\n\r\n    roomIsFull = function(roomCode) {\r\n        let room = this.rooms.get(roomCode);\r\n        return room.players.length < 10 ? false : true; \r\n    }\r\n\r\n    //returns an updated player array where the callingPlayer's isReady property is flipped\r\n    updatePlayerReadiness = function(callingPlayerId){\r\n        const room = this.rooms.get(this.playersToRooms.get(callingPlayerId))\r\n        const updatedPlayerArray = (room.players||[]).map((player)=>{\r\n            if(player.playerId === callingPlayerId){\r\n                return {...player,readyToStart:!player.readyToStart}\r\n            } else {\r\n                return player;\r\n            }\r\n        })\r\n        return updatedPlayerArray\r\n    }\r\n\r\n    sendUpdatedPlayersToRoom = function(updatedPlayers,enteredRoomCode){\r\n        this.io.in(enteredRoomCode).emit(updatePlayers.type,updatedPlayers);\r\n    }\r\n\r\n    getRoom = function(enteredRoomCode){\r\n        return this.rooms.get(enteredRoomCode);\r\n    }\r\n\r\n    emitAllRoomData = function(enteredRoomCode, socketId){\r\n        //Problem here is that the socket id changes between refreshes\r\n        //Would have to implement a way to cache the player session\r\n    }\r\n\r\n}\r\n\r\n\r\n","import LobbyController from \"./lobbyController\";\r\nimport GameController from \"./gameController\";\r\nimport chalk from 'chalk';\r\n\r\nimport {\r\n    ioCreateRoom,\r\n    ioEnterRoomCode,\r\n    ioPlayerIsReady,\r\n    ioStartGame,\r\n    errorOccured,\r\n    ioPlayerAcknowledged,\r\n    ioUpdateSelectedPlayers,\r\n    ioGetAllData,\r\n    ioCastToVote,\r\n    ioPlayerCastVote\r\n} from '../../client/reducers';\r\n\r\n//Handles socket \r\nexport default class MainController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.lobbyController = new LobbyController(this.io);\r\n        this.gameController = new GameController(this.io);\r\n\r\n        this.io.on(\"connection\", (socket) => {\r\n\r\n            socket.on(ioCreateRoom.type,()=>{\r\n                socket.join(this.lobbyController.createRoom(socket.id));\r\n            });\r\n    \r\n            socket.on(ioEnterRoomCode.type,(enteredRoomCode)=>{\r\n                 this.lobbyController.joinRoom(enteredRoomCode,socket);\r\n            });\r\n\r\n            socket.on(\"disconnect\",()=>{\r\n               this.lobbyController.playerLeft(socket.id)\r\n            })\r\n\r\n            socket.on(ioPlayerIsReady.type,(payload)=>{\r\n                const updatedPlayers = this.lobbyController.updatePlayerReadiness(payload.playerId);\r\n                this.lobbyController.rooms.get(payload.roomCode).updatePlayers(updatedPlayers);\r\n                this.lobbyController.sendUpdatedPlayersToRoom(updatedPlayers,payload.roomCode);\r\n            });\r\n\r\n            socket.on(ioStartGame.type,(enteredRoomCode)=>{\r\n                const room = this.lobbyController.getRoom(enteredRoomCode)\r\n                if(room){\r\n                    this.gameController.createGame(room);\r\n                } else {\r\n                    console.log(chalk.red('Tried to create a gameController without valid room object passed. Passed to function:'))\r\n                    console.log(chalk.red(room))\r\n                }\r\n            })\r\n\r\n            socket.on(ioGetAllData.type,(enteredRoomCode)=>{\r\n                if(this.lobbyController.checkRoomExists(enteredRoomCode)){\r\n                    this.lobbyController.emitAllRoomData(enteredRoomCode,socket.id)\r\n                } else {\r\n                    io.to(socket.id).emit(errorOccured.type,'No Such Room Exists...');\r\n                }\r\n            })\r\n\r\n            socket.on(ioPlayerAcknowledged.type,(enteredRoomCode)=>{\r\n                this.gameController.checkAllPlayersAcknowledged(enteredRoomCode);\r\n            })\r\n\r\n            socket.on(ioUpdateSelectedPlayers.type,(payload)=>{\r\n                this.gameController.sendSelectedPlayersToRoom(payload.roomCode,payload.newSelectedPlayers)\r\n            })\r\n\r\n            socket.on(ioCastToVote.type,(payload)=>{\r\n                this.gameController.updateCastToVote(payload.roomCode,payload.castToVote)\r\n            })\r\n\r\n            socket.on(ioPlayerCastVote.type,(payload)=>{\r\n                this.gameController.updatePlayerVote(payload.roomCode,payload.selfId,payload.missionPass);\r\n                this.gameController.checkAllPlayersVoted(payload.roomCode) ? this.gameController.transitionRound() : ()=>{}\r\n            })\r\n        });\r\n    }\r\n}","import {round as firstRound} from '../models/round';\r\nimport { Room } from './room';\r\n\r\nexport class Game {\r\n    constructor(room){\r\n        this.players = room.players;\r\n        this.numberOfPlayers = this.players.length;\r\n        this.spies = [];\r\n        this.knights = [];\r\n        this.rounds = [\r\n            firstRound\r\n        ];\r\n        this.leader = '';\r\n        this.showRoles = true;\r\n        this.playersAcknowledgedRole = 0;\r\n        this.castToVote = false;\r\n        this.currentRound = 0;\r\n        this.missionRules = [\r\n            [2,3,2,3,3], //5 players\r\n            [2,3,4,3,4], //6 players\r\n            [2,3,3,4,4], //7 players\r\n            [3,4,4,5,5], //8 players\r\n            [3,4,4,5,5], //9 players\r\n            [3,4,4,5,5] //10 players\r\n        ]\r\n    }\r\n\r\n    //selects 1/3 (rounded up) of players to be spies \r\n    selectRoles = function(){\r\n        let playersArray = [...this.players];\r\n        let randomIndex;\r\n        //assign the spies\r\n        while(this.spies.length<Math.ceil((this.players.length*0.33))){\r\n            let randomIndex = Math.ceil((Math.random()*playersArray.length))-1;\r\n            this.spies.push(playersArray[randomIndex])\r\n            playersArray.splice(randomIndex,1)\r\n        }\r\n        this.knights = playersArray; //assign the remaining knights\r\n    }\r\n\r\n    selectMissionLeader = function(){\r\n        let randomIndex = Math.ceil((Math.random()*this.players.length))-1;\r\n        this.leader = this.players[randomIndex].playerId;\r\n    }\r\n}","import randomstring from \"randomstring\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport class Room {\r\n\r\n    //callingPlayerId: socket.id\r\n    constructor(callingPlayerId){\r\n        this.roomCode = this.generateRoomCode();\r\n        this.players = [];\r\n        this.addPlayer(callingPlayerId)\r\n    }\r\n\r\n    generateRoomCode = function(){\r\n        return randomstring.generate({\r\n            length: 6,\r\n            charset: 'alphanumeric'\r\n        });\r\n    }\r\n\r\n    addPlayer = function(callingPlayerId){\r\n        this.players.push({\r\n            playerId:callingPlayerId,\r\n            selfAlias:`Player${this.players.length+1}`,\r\n            readyToStart: false\r\n        });\r\n    }\r\n\r\n    updatePlayers = function(newPlayerArray){\r\n        this.players = newPlayerArray;\r\n    }\r\n\r\n}","export const round = {\r\n    round: 0,\r\n    playersOnMission: [],\r\n    numberOfPass: 0,\r\n    numberOfFail: 0,\r\n    knightsWon: null\r\n}","import { Server } from 'socket.io';\r\nimport path from 'path';\r\n\r\nexport default (httpServer) => {\r\n\r\n    console.log('Setting up socket.io server...');\r\n    const io = new Server(httpServer,{\r\n        cors: {\r\n            origin: \"*\"\r\n        },\r\n    });\r\n\r\n    return io;\r\n}","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"chalk\");","module.exports = require(\"express\");","module.exports = require(\"randomstring\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\r\nimport socketServer from \"./socket\";\r\nimport {createServer} from 'http';\r\nimport path from 'path';\r\nconst publicPath = path.join(__dirname, '..', 'public','dist');\r\nimport MainController from './controllers/mainController';\r\n\r\nconst expressServer = express();\r\nexpressServer.use(express.static(publicPath));\r\nexpressServer.get('*', (req, res)=>{\r\n    res.sendFile(path.join(publicPath,'index.html'));\r\n})\r\n\r\nconst httpServer = createServer(expressServer);\r\n\r\nconst io = socketServer(httpServer);\r\n\r\nhttpServer.listen(3000, ()=> {\r\n    console.log(`Server running on http://localhost:3000`);\r\n});\r\n\r\nconst mainController = new MainController(io);\r\n\r\n\r\n"],"names":["configureStore","createSlice","combineReducers","PayloadAction","initialGameState","players","spies","knights","round","leader","showRoles","allAcknowledged","selectedPlayers","currentRound","castToVote","allowToVote","initialRoomState","selfId","selfAlias","roomCode","error","gameStarted","roomsSlice","name","initialState","reducers","ioCreateRoom","state","action","roomCreated","payload","ioEnterRoomCode","updatePlayers","updateSelf","errorOccured","ioPlayerIsReady","ioStartGame","navigateToGame","returnAllRoomData","gameSlice","updateGameState","ioGetAllData","ioPlayerAcknowledged","allPlayersAcknowledged","ioUpdateSelectedPlayers","updateSelectedPlayers","ioCastToVote","updateCastToVote","ioPlayerCastVote","updateAllowToVote","rootReducer","room","reducer","game","actions","navigateToLobby","Game","io","GameController","selectRoles","selectMissionLeader","games","set","emit","type","get","playersAcknowledgedRole","length","console","log","missionPass","rounds","numberOfPass","numberOfFail","playersOnMission","push","to","missionRules","knightsWon","Map","Room","chalk","LobbyController","playerId","newRoom","addToRoomMap","addPlayerToRoomMap","formattedRoom","enteredRoomCode","socket","checkRoomExists","roomIsFull","join","rooms","id","addPlayerToRoom","formattedPlayer","removePlayerFromRoom","red","playersToRooms","playersArray","filter","player","callingPlayerId","updatedPlayerArray","map","readyToStart","updatedPlayers","socketId","enteredCode","has","addPlayer","size","undefined","roomName","playerRoom","remainingPlayers","MainController","lobbyController","gameController","on","createRoom","joinRoom","playerLeft","updatePlayerReadiness","sendUpdatedPlayersToRoom","getRoom","createGame","emitAllRoomData","checkAllPlayersAcknowledged","sendSelectedPlayersToRoom","newSelectedPlayers","updatePlayerVote","checkAllPlayersVoted","transitionRound","firstRound","randomIndex","Math","ceil","random","splice","numberOfPlayers","randomstring","generate","charset","newPlayerArray","generateRoomCode","Server","path","httpServer","cors","origin","express","socketServer","createServer","publicPath","__dirname","expressServer","use","req","res","sendFile","listen","mainController"],"sourceRoot":""}