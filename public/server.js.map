{"version":3,"file":"server.js","mappings":"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","sources":["webpack://spyspy/./client/reducers.js","webpack://spyspy/./server/controllers/lobbyController.js","webpack://spyspy/./server/controllers/mainController.js","webpack://spyspy/./server/models/room.js","webpack://spyspy/./server/socket.js","webpack://spyspy/external commonjs \"@reduxjs/toolkit\"","webpack://spyspy/external commonjs \"chalk\"","webpack://spyspy/external commonjs \"express\"","webpack://spyspy/external commonjs \"randomstring\"","webpack://spyspy/external commonjs \"socket.io\"","webpack://spyspy/external commonjs \"socket.io-client\"","webpack://spyspy/external node-commonjs \"http\"","webpack://spyspy/external node-commonjs \"path\"","webpack://spyspy/webpack/bootstrap","webpack://spyspy/webpack/runtime/compat get default export","webpack://spyspy/webpack/runtime/define property getters","webpack://spyspy/webpack/runtime/hasOwnProperty shorthand","webpack://spyspy/webpack/runtime/make namespace object","webpack://spyspy/./server/server.js"],"sourcesContent":["import { configureStore, createSlice, combineReducers, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    game: {\r\n        missionLeader: false,\r\n        leaderSelection: [],\r\n        round: 0,\r\n        closeEyes: false,\r\n        spies: [],\r\n        knights: [],\r\n        votesPass: 0,\r\n        votesFail: 0,\r\n    }\r\n}\r\n\r\nconst initialRoomState = {\r\n    selfId: '',\r\n    selfAlias: '',\r\n    players: [],\r\n    roomCode: '',\r\n    error: null,\r\n}\r\n\r\nconst roomsSlice = createSlice({\r\n    name: \"room\",\r\n    initialState:initialRoomState,\r\n    reducers: {\r\n        ioCreateRoom(state,action){\r\n        },\r\n        roomCreated(state,{action,payload}){\r\n            return {...state,...payload}; \r\n        },\r\n        ioEnterRoomCode(state,{action,payload}){            \r\n        },\r\n        updatePlayers(state,{action,payload}){\r\n            return {...state, players: payload}\r\n        },\r\n        updateSelf(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                ...payload\r\n            }\r\n        },\r\n        errorOccured(state,{action,payload}){\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        },\r\n        ioPlayerIsReady(state,{action,payload}){\r\n        }\r\n    }\r\n});\r\n\r\n//Root reducer for usage in the store\r\nexport const rootReducer = combineReducers({\r\n    room: roomsSlice.reducer\r\n});\r\n\r\n//Make action creators accesible \r\nexport const {\r\n    ioCreateRoom,\r\n    roomCreated,\r\n    navigateToLobby,\r\n    ioEnterRoomCode,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured,\r\n    ioPlayerIsReady,\r\n} = roomsSlice.actions;\r\n\r\n","import {\r\n    roomCreated,\r\n    updatePlayers,\r\n    updateSelf,\r\n    errorOccured\r\n} from '../../client/reducers';\r\n\r\nimport { Room } from '../models/room';\r\nimport chalk from 'chalk';\r\n\r\n// one instance is made on server start up\r\nexport default class LobbyController{\r\n\r\n    constructor(){\r\n        this.rooms = new Map();\r\n        this.playersToRooms = new Map();\r\n    }\r\n\r\n    createRoom = function(io,playerId){\r\n        const newRoom = new Room(playerId);\r\n        this.addToRoomMap(newRoom);\r\n        this.addPlayerToRoomMap(newRoom,playerId);\r\n        io.to(playerId).emit(roomCreated.type,this.formattedRoom(newRoom,playerId));\r\n        return newRoom.roomCode\r\n    }\r\n\r\n    joinRoom = function(enteredRoomCode,io,socket){\r\n        if(this.checkRoomExists(enteredRoomCode)){\r\n            if(!this.roomIsFull(enteredRoomCode)){\r\n                socket.join(enteredRoomCode);\r\n                const room = this.rooms.get(enteredRoomCode)\r\n                this.addPlayerToRoomMap(room,socket.id)\r\n                const players = this.addPlayerToRoom(enteredRoomCode,socket.id)\r\n                //update this players state \r\n                io.to(socket.id).emit(updateSelf.type,this.formattedPlayer(enteredRoomCode,players,socket.id));\r\n                //update all players state with the list of players\r\n                io.in(enteredRoomCode).emit(updatePlayers.type,players);\r\n            } else {\r\n                io.to(socket.id).emit(errorOccured.type,'roomIsFull');\r\n            }\r\n        } else{\r\n            \r\n        }          \r\n    }\r\n\r\n    playerLeft = function(playerId,io){\r\n        try{\r\n            this.removePlayerFromRoom(playerId,io)\r\n        } catch(error){\r\n            console.log(chalk.red('an error occured trying to remove a player from their room'));\r\n            console.log(error);\r\n        }  \r\n    }\r\n\r\n    addToRoomMap = function(newRoom){\r\n        return this.rooms.set(newRoom.roomCode,newRoom);\r\n    }\r\n\r\n    addPlayerToRoomMap = function(newRoom,playerId){\r\n        return this.playersToRooms.set(playerId,newRoom.roomCode);\r\n    }\r\n\r\n    formattedRoom = function(newRoom,playerId){\r\n        return {\r\n            roomCode: newRoom.roomCode,\r\n            selfId: playerId,\r\n            selfAlias: newRoom.players[0].selfAlias,\r\n            players: newRoom.players\r\n        }\r\n    }\r\n\r\n    formattedPlayer = function(roomCode, playersArray,playerId){\r\n\r\n        const selfAlias = playersArray.filter((player)=>{\r\n            return player.selfId === playerId\r\n        }).selfAlias\r\n\r\n        return {\r\n            roomCode: roomCode, \r\n            selfId: playerId,\r\n            selfAlias\r\n        }\r\n    }\r\n\r\n    checkRoomExists(enteredCode){\r\n        return this.rooms.has(enteredCode)\r\n    }\r\n\r\n    addPlayerToRoom(enteredRoomCode, player){\r\n        let room = this.rooms.get(enteredRoomCode);\r\n        if(room){\r\n            if(room.players.length<10){\r\n                room.addPlayer(player);\r\n            }\r\n            return room.players;\r\n        } else {\r\n            console.log(chalk.red(`no room was found for ${enteredCode}`))\r\n        }\r\n    }\r\n\r\n    removePlayerFromRoom(playerId,io){\r\n        \r\n        if(this.playersToRooms.size===0 || this.playersToRooms.get(playerId) === undefined){\r\n            return;\r\n        }\r\n        let roomName = this.playersToRooms.get(playerId);\r\n        let playerRoom = this.rooms.get(roomName);\r\n        let remainingPlayers = playerRoom.players.filter((player)=>{\r\n            return player.playerID !== playerId\r\n        });\r\n\r\n        playerRoom = {\r\n            ...playerRoom, \r\n            players:remainingPlayers\r\n        }\r\n\r\n        if(playerRoom.players.length===0){\r\n            this.rooms.delete(roomName);    \r\n        } else {\r\n            this.rooms.set(roomName,playerRoom);\r\n            io.in(roomName).emit(updatePlayers.type,remainingPlayers);\r\n        } \r\n    }\r\n\r\n    roomIsFull = function(roomCode) {\r\n        let room = this.rooms.get(roomCode);\r\n        return room.players.length < 10 ? false : true; \r\n    }\r\n\r\n    //returns an updated player array where the callingPlayer's isReady property is flipped\r\n    updatePlayerReadiness = function(callingPlayerId){\r\n        const room = this.rooms.get(this.playersToRooms.get(callingPlayerId))\r\n        const updatedPlayerArray = (room.players||[]).map((player)=>{\r\n            if(player.playerID === callingPlayerId){\r\n                return {...player,readyToStart:!player.readyToStart}\r\n            } else {\r\n                return player;\r\n            }\r\n        })\r\n        return updatedPlayerArray\r\n    }\r\n\r\n    sendUpdatedPlayersToRoom = function(updatedPlayers,io,enteredRoomCode){\r\n        io.in(enteredRoomCode).emit(updatePlayers.type,updatedPlayers);\r\n    }\r\n}\r\n\r\n\r\n","import LobbyController from \"./lobbyController\";\r\nimport {\r\n    ioCreateRoom,\r\n    ioEnterRoomCode,\r\n    ioPlayerIsReady\r\n} from '../../client/reducers';\r\n\r\n//Handles socket \r\nexport default class MainController {\r\n    constructor(io){\r\n        this.io = io;\r\n        this.lobbyController = new LobbyController();\r\n\r\n        this.io.on(\"connection\", (socket) => {\r\n\r\n            socket.on(ioCreateRoom.type,()=>{\r\n                socket.join(this.lobbyController.createRoom(this.io,socket.id));\r\n            });\r\n    \r\n            socket.on(ioEnterRoomCode.type,(enteredRoomCode)=>{\r\n                 this.lobbyController.joinRoom(enteredRoomCode,this.io,socket);\r\n            });\r\n\r\n            socket.on(\"disconnect\",()=>{\r\n               this.lobbyController.playerLeft(socket.id,this.io)\r\n            })\r\n\r\n            socket.on(ioPlayerIsReady.type,(payload)=>{\r\n                const updatedPlayers = this.lobbyController.updatePlayerReadiness(payload.playerId);\r\n                this.lobbyController.rooms.get(payload.roomCode).updatePlayers(updatedPlayers);\r\n                this.lobbyController.sendUpdatedPlayersToRoom(updatedPlayers,io,payload.roomCode);\r\n            })\r\n        });\r\n    }\r\n}","import randomstring from \"randomstring\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport class Room {\r\n\r\n    //callingPlayerId: socket.id\r\n    constructor(callingPlayerId){\r\n        this.roomCode = this.generateRoomCode();\r\n        this.players = [];\r\n        this.addPlayer(callingPlayerId)\r\n    }\r\n\r\n    generateRoomCode = function(){\r\n        return randomstring.generate({\r\n            length: 6,\r\n            charset: 'alphanumeric'\r\n        });\r\n    }\r\n\r\n    addPlayer = function(callingPlayerId){\r\n        this.players.push({\r\n            playerID:callingPlayerId,\r\n            selfAlias:`Player${this.players.length+1}`,\r\n            readyToStart: false\r\n        });\r\n    }\r\n\r\n    updatePlayers = function(newPlayerArray){\r\n        this.players = newPlayerArray;\r\n    }\r\n\r\n}","import { Server } from 'socket.io';\r\nimport path from 'path';\r\n\r\nexport default (httpServer) => {\r\n\r\n    console.log('Setting up socket.io server...');\r\n    const io = new Server(httpServer,{\r\n        cors: {\r\n            origin: \"*\"\r\n        },\r\n    });\r\n\r\n    return io;\r\n}","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"chalk\");","module.exports = require(\"express\");","module.exports = require(\"randomstring\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import express from 'express';\r\nimport socketServer from \"./socket\";\r\nimport {createServer} from 'http';\r\nimport path from 'path';\r\nconst publicPath = path.join(__dirname, '..', 'public','dist');\r\nimport MainController from './controllers/mainController';\r\n\r\nconst expressServer = express();\r\nexpressServer.use(express.static(publicPath));\r\nexpressServer.get('*', (req, res)=>{\r\n    res.sendFile(path.join(publicPath,'index.html'));\r\n})\r\n\r\nconst httpServer = createServer(expressServer);\r\n\r\nconst io = socketServer(httpServer);\r\n\r\nhttpServer.listen(3000, ()=> {\r\n    console.log(`Server running on http://localhost:3000`);\r\n});\r\n\r\nconst mainController = new MainController(io);\r\n\r\n\r\n"],"names":["configureStore","createSlice","combineReducers","PayloadAction","initialState","game","missionLeader","leaderSelection","round","closeEyes","spies","knights","votesPass","votesFail","initialRoomState","selfId","selfAlias","players","roomCode","error","roomsSlice","name","reducers","ioCreateRoom","state","action","roomCreated","payload","ioEnterRoomCode","updatePlayers","updateSelf","errorOccured","ioPlayerIsReady","rootReducer","room","reducer","actions","navigateToLobby","Room","chalk","LobbyController","io","playerId","newRoom","addToRoomMap","addPlayerToRoomMap","to","emit","type","formattedRoom","enteredRoomCode","socket","checkRoomExists","roomIsFull","join","rooms","get","id","addPlayerToRoom","formattedPlayer","removePlayerFromRoom","console","log","red","set","playersToRooms","playersArray","filter","player","length","callingPlayerId","updatedPlayerArray","map","playerID","readyToStart","updatedPlayers","Map","enteredCode","has","addPlayer","size","undefined","roomName","playerRoom","remainingPlayers","MainController","lobbyController","on","createRoom","joinRoom","playerLeft","updatePlayerReadiness","sendUpdatedPlayersToRoom","randomstring","generate","charset","push","newPlayerArray","generateRoomCode","Server","path","httpServer","cors","origin","express","socketServer","createServer","publicPath","__dirname","expressServer","use","req","res","sendFile","listen","mainController"],"sourceRoot":""}